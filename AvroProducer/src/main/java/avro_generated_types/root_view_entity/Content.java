/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro_generated_types.root_view_entity;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Content extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1596537172068937392L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Content\",\"namespace\":\"avro_generated_types.root_view_entity\",\"fields\":[{\"name\":\"pictures\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"termsAndConditions\",\"type\":[\"null\",\"string\"]},{\"name\":\"facebookCarouselPicture\",\"type\":[\"null\",\"string\"]},{\"name\":\"facebookLinkPicture\",\"type\":[\"null\",\"string\"]},{\"name\":\"attachments\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Attachments\",\"namespace\":\"avro_generated_types.root_view_entity.content\",\"fields\":[{\"name\":\"url\",\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"type\":[\"null\",\"string\"]}]}}},{\"name\":\"thumbnail\",\"type\":[\"null\",\"string\"]},{\"name\":\"interactiveSaleAttachments\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Interactivesaleattachments\",\"namespace\":\"avro_generated_types.root_view_entity.content\",\"fields\":[{\"name\":\"url\",\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"type\":[\"null\",\"string\"]}]}}},{\"name\":\"mediumPictures\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"smallPictures\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"termsAndConditionsImages\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Content> ENCODER =
      new BinaryMessageEncoder<Content>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Content> DECODER =
      new BinaryMessageDecoder<Content>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Content> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Content> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Content>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Content to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Content from a ByteBuffer. */
  public static Content fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.util.List<java.lang.CharSequence> pictures;
  @Deprecated public java.lang.CharSequence termsAndConditions;
  @Deprecated public java.lang.CharSequence facebookCarouselPicture;
  @Deprecated public java.lang.CharSequence facebookLinkPicture;
  @Deprecated public java.util.List<avro_generated_types.root_view_entity.content.Attachments> attachments;
  @Deprecated public java.lang.CharSequence thumbnail;
  @Deprecated public java.util.List<avro_generated_types.root_view_entity.content.Interactivesaleattachments> interactiveSaleAttachments;
  @Deprecated public java.util.List<java.lang.CharSequence> mediumPictures;
  @Deprecated public java.util.List<java.lang.CharSequence> smallPictures;
  @Deprecated public java.util.List<java.lang.CharSequence> termsAndConditionsImages;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Content() {}

  /**
   * All-args constructor.
   * @param pictures The new value for pictures
   * @param termsAndConditions The new value for termsAndConditions
   * @param facebookCarouselPicture The new value for facebookCarouselPicture
   * @param facebookLinkPicture The new value for facebookLinkPicture
   * @param attachments The new value for attachments
   * @param thumbnail The new value for thumbnail
   * @param interactiveSaleAttachments The new value for interactiveSaleAttachments
   * @param mediumPictures The new value for mediumPictures
   * @param smallPictures The new value for smallPictures
   * @param termsAndConditionsImages The new value for termsAndConditionsImages
   */
  public Content(java.util.List<java.lang.CharSequence> pictures, java.lang.CharSequence termsAndConditions, java.lang.CharSequence facebookCarouselPicture, java.lang.CharSequence facebookLinkPicture, java.util.List<avro_generated_types.root_view_entity.content.Attachments> attachments, java.lang.CharSequence thumbnail, java.util.List<avro_generated_types.root_view_entity.content.Interactivesaleattachments> interactiveSaleAttachments, java.util.List<java.lang.CharSequence> mediumPictures, java.util.List<java.lang.CharSequence> smallPictures, java.util.List<java.lang.CharSequence> termsAndConditionsImages) {
    this.pictures = pictures;
    this.termsAndConditions = termsAndConditions;
    this.facebookCarouselPicture = facebookCarouselPicture;
    this.facebookLinkPicture = facebookLinkPicture;
    this.attachments = attachments;
    this.thumbnail = thumbnail;
    this.interactiveSaleAttachments = interactiveSaleAttachments;
    this.mediumPictures = mediumPictures;
    this.smallPictures = smallPictures;
    this.termsAndConditionsImages = termsAndConditionsImages;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return pictures;
    case 1: return termsAndConditions;
    case 2: return facebookCarouselPicture;
    case 3: return facebookLinkPicture;
    case 4: return attachments;
    case 5: return thumbnail;
    case 6: return interactiveSaleAttachments;
    case 7: return mediumPictures;
    case 8: return smallPictures;
    case 9: return termsAndConditionsImages;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: pictures = (java.util.List<java.lang.CharSequence>)value$; break;
    case 1: termsAndConditions = (java.lang.CharSequence)value$; break;
    case 2: facebookCarouselPicture = (java.lang.CharSequence)value$; break;
    case 3: facebookLinkPicture = (java.lang.CharSequence)value$; break;
    case 4: attachments = (java.util.List<avro_generated_types.root_view_entity.content.Attachments>)value$; break;
    case 5: thumbnail = (java.lang.CharSequence)value$; break;
    case 6: interactiveSaleAttachments = (java.util.List<avro_generated_types.root_view_entity.content.Interactivesaleattachments>)value$; break;
    case 7: mediumPictures = (java.util.List<java.lang.CharSequence>)value$; break;
    case 8: smallPictures = (java.util.List<java.lang.CharSequence>)value$; break;
    case 9: termsAndConditionsImages = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'pictures' field.
   * @return The value of the 'pictures' field.
   */
  public java.util.List<java.lang.CharSequence> getPictures() {
    return pictures;
  }

  /**
   * Sets the value of the 'pictures' field.
   * @param value the value to set.
   */
  public void setPictures(java.util.List<java.lang.CharSequence> value) {
    this.pictures = value;
  }

  /**
   * Gets the value of the 'termsAndConditions' field.
   * @return The value of the 'termsAndConditions' field.
   */
  public java.lang.CharSequence getTermsAndConditions() {
    return termsAndConditions;
  }

  /**
   * Sets the value of the 'termsAndConditions' field.
   * @param value the value to set.
   */
  public void setTermsAndConditions(java.lang.CharSequence value) {
    this.termsAndConditions = value;
  }

  /**
   * Gets the value of the 'facebookCarouselPicture' field.
   * @return The value of the 'facebookCarouselPicture' field.
   */
  public java.lang.CharSequence getFacebookCarouselPicture() {
    return facebookCarouselPicture;
  }

  /**
   * Sets the value of the 'facebookCarouselPicture' field.
   * @param value the value to set.
   */
  public void setFacebookCarouselPicture(java.lang.CharSequence value) {
    this.facebookCarouselPicture = value;
  }

  /**
   * Gets the value of the 'facebookLinkPicture' field.
   * @return The value of the 'facebookLinkPicture' field.
   */
  public java.lang.CharSequence getFacebookLinkPicture() {
    return facebookLinkPicture;
  }

  /**
   * Sets the value of the 'facebookLinkPicture' field.
   * @param value the value to set.
   */
  public void setFacebookLinkPicture(java.lang.CharSequence value) {
    this.facebookLinkPicture = value;
  }

  /**
   * Gets the value of the 'attachments' field.
   * @return The value of the 'attachments' field.
   */
  public java.util.List<avro_generated_types.root_view_entity.content.Attachments> getAttachments() {
    return attachments;
  }

  /**
   * Sets the value of the 'attachments' field.
   * @param value the value to set.
   */
  public void setAttachments(java.util.List<avro_generated_types.root_view_entity.content.Attachments> value) {
    this.attachments = value;
  }

  /**
   * Gets the value of the 'thumbnail' field.
   * @return The value of the 'thumbnail' field.
   */
  public java.lang.CharSequence getThumbnail() {
    return thumbnail;
  }

  /**
   * Sets the value of the 'thumbnail' field.
   * @param value the value to set.
   */
  public void setThumbnail(java.lang.CharSequence value) {
    this.thumbnail = value;
  }

  /**
   * Gets the value of the 'interactiveSaleAttachments' field.
   * @return The value of the 'interactiveSaleAttachments' field.
   */
  public java.util.List<avro_generated_types.root_view_entity.content.Interactivesaleattachments> getInteractiveSaleAttachments() {
    return interactiveSaleAttachments;
  }

  /**
   * Sets the value of the 'interactiveSaleAttachments' field.
   * @param value the value to set.
   */
  public void setInteractiveSaleAttachments(java.util.List<avro_generated_types.root_view_entity.content.Interactivesaleattachments> value) {
    this.interactiveSaleAttachments = value;
  }

  /**
   * Gets the value of the 'mediumPictures' field.
   * @return The value of the 'mediumPictures' field.
   */
  public java.util.List<java.lang.CharSequence> getMediumPictures() {
    return mediumPictures;
  }

  /**
   * Sets the value of the 'mediumPictures' field.
   * @param value the value to set.
   */
  public void setMediumPictures(java.util.List<java.lang.CharSequence> value) {
    this.mediumPictures = value;
  }

  /**
   * Gets the value of the 'smallPictures' field.
   * @return The value of the 'smallPictures' field.
   */
  public java.util.List<java.lang.CharSequence> getSmallPictures() {
    return smallPictures;
  }

  /**
   * Sets the value of the 'smallPictures' field.
   * @param value the value to set.
   */
  public void setSmallPictures(java.util.List<java.lang.CharSequence> value) {
    this.smallPictures = value;
  }

  /**
   * Gets the value of the 'termsAndConditionsImages' field.
   * @return The value of the 'termsAndConditionsImages' field.
   */
  public java.util.List<java.lang.CharSequence> getTermsAndConditionsImages() {
    return termsAndConditionsImages;
  }

  /**
   * Sets the value of the 'termsAndConditionsImages' field.
   * @param value the value to set.
   */
  public void setTermsAndConditionsImages(java.util.List<java.lang.CharSequence> value) {
    this.termsAndConditionsImages = value;
  }

  /**
   * Creates a new Content RecordBuilder.
   * @return A new Content RecordBuilder
   */
  public static avro_generated_types.root_view_entity.Content.Builder newBuilder() {
    return new avro_generated_types.root_view_entity.Content.Builder();
  }

  /**
   * Creates a new Content RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Content RecordBuilder
   */
  public static avro_generated_types.root_view_entity.Content.Builder newBuilder(avro_generated_types.root_view_entity.Content.Builder other) {
    return new avro_generated_types.root_view_entity.Content.Builder(other);
  }

  /**
   * Creates a new Content RecordBuilder by copying an existing Content instance.
   * @param other The existing instance to copy.
   * @return A new Content RecordBuilder
   */
  public static avro_generated_types.root_view_entity.Content.Builder newBuilder(avro_generated_types.root_view_entity.Content other) {
    return new avro_generated_types.root_view_entity.Content.Builder(other);
  }

  /**
   * RecordBuilder for Content instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Content>
    implements org.apache.avro.data.RecordBuilder<Content> {

    private java.util.List<java.lang.CharSequence> pictures;
    private java.lang.CharSequence termsAndConditions;
    private java.lang.CharSequence facebookCarouselPicture;
    private java.lang.CharSequence facebookLinkPicture;
    private java.util.List<avro_generated_types.root_view_entity.content.Attachments> attachments;
    private java.lang.CharSequence thumbnail;
    private java.util.List<avro_generated_types.root_view_entity.content.Interactivesaleattachments> interactiveSaleAttachments;
    private java.util.List<java.lang.CharSequence> mediumPictures;
    private java.util.List<java.lang.CharSequence> smallPictures;
    private java.util.List<java.lang.CharSequence> termsAndConditionsImages;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(avro_generated_types.root_view_entity.Content.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.pictures)) {
        this.pictures = data().deepCopy(fields()[0].schema(), other.pictures);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.termsAndConditions)) {
        this.termsAndConditions = data().deepCopy(fields()[1].schema(), other.termsAndConditions);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.facebookCarouselPicture)) {
        this.facebookCarouselPicture = data().deepCopy(fields()[2].schema(), other.facebookCarouselPicture);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.facebookLinkPicture)) {
        this.facebookLinkPicture = data().deepCopy(fields()[3].schema(), other.facebookLinkPicture);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.attachments)) {
        this.attachments = data().deepCopy(fields()[4].schema(), other.attachments);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.thumbnail)) {
        this.thumbnail = data().deepCopy(fields()[5].schema(), other.thumbnail);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.interactiveSaleAttachments)) {
        this.interactiveSaleAttachments = data().deepCopy(fields()[6].schema(), other.interactiveSaleAttachments);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.mediumPictures)) {
        this.mediumPictures = data().deepCopy(fields()[7].schema(), other.mediumPictures);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.smallPictures)) {
        this.smallPictures = data().deepCopy(fields()[8].schema(), other.smallPictures);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.termsAndConditionsImages)) {
        this.termsAndConditionsImages = data().deepCopy(fields()[9].schema(), other.termsAndConditionsImages);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Content instance
     * @param other The existing instance to copy.
     */
    private Builder(avro_generated_types.root_view_entity.Content other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.pictures)) {
        this.pictures = data().deepCopy(fields()[0].schema(), other.pictures);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.termsAndConditions)) {
        this.termsAndConditions = data().deepCopy(fields()[1].schema(), other.termsAndConditions);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.facebookCarouselPicture)) {
        this.facebookCarouselPicture = data().deepCopy(fields()[2].schema(), other.facebookCarouselPicture);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.facebookLinkPicture)) {
        this.facebookLinkPicture = data().deepCopy(fields()[3].schema(), other.facebookLinkPicture);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.attachments)) {
        this.attachments = data().deepCopy(fields()[4].schema(), other.attachments);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.thumbnail)) {
        this.thumbnail = data().deepCopy(fields()[5].schema(), other.thumbnail);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.interactiveSaleAttachments)) {
        this.interactiveSaleAttachments = data().deepCopy(fields()[6].schema(), other.interactiveSaleAttachments);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.mediumPictures)) {
        this.mediumPictures = data().deepCopy(fields()[7].schema(), other.mediumPictures);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.smallPictures)) {
        this.smallPictures = data().deepCopy(fields()[8].schema(), other.smallPictures);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.termsAndConditionsImages)) {
        this.termsAndConditionsImages = data().deepCopy(fields()[9].schema(), other.termsAndConditionsImages);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'pictures' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getPictures() {
      return pictures;
    }

    /**
      * Sets the value of the 'pictures' field.
      * @param value The value of 'pictures'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setPictures(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.pictures = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'pictures' field has been set.
      * @return True if the 'pictures' field has been set, false otherwise.
      */
    public boolean hasPictures() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'pictures' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearPictures() {
      pictures = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'termsAndConditions' field.
      * @return The value.
      */
    public java.lang.CharSequence getTermsAndConditions() {
      return termsAndConditions;
    }

    /**
      * Sets the value of the 'termsAndConditions' field.
      * @param value The value of 'termsAndConditions'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setTermsAndConditions(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.termsAndConditions = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'termsAndConditions' field has been set.
      * @return True if the 'termsAndConditions' field has been set, false otherwise.
      */
    public boolean hasTermsAndConditions() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'termsAndConditions' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearTermsAndConditions() {
      termsAndConditions = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'facebookCarouselPicture' field.
      * @return The value.
      */
    public java.lang.CharSequence getFacebookCarouselPicture() {
      return facebookCarouselPicture;
    }

    /**
      * Sets the value of the 'facebookCarouselPicture' field.
      * @param value The value of 'facebookCarouselPicture'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setFacebookCarouselPicture(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.facebookCarouselPicture = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'facebookCarouselPicture' field has been set.
      * @return True if the 'facebookCarouselPicture' field has been set, false otherwise.
      */
    public boolean hasFacebookCarouselPicture() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'facebookCarouselPicture' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearFacebookCarouselPicture() {
      facebookCarouselPicture = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'facebookLinkPicture' field.
      * @return The value.
      */
    public java.lang.CharSequence getFacebookLinkPicture() {
      return facebookLinkPicture;
    }

    /**
      * Sets the value of the 'facebookLinkPicture' field.
      * @param value The value of 'facebookLinkPicture'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setFacebookLinkPicture(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.facebookLinkPicture = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'facebookLinkPicture' field has been set.
      * @return True if the 'facebookLinkPicture' field has been set, false otherwise.
      */
    public boolean hasFacebookLinkPicture() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'facebookLinkPicture' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearFacebookLinkPicture() {
      facebookLinkPicture = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'attachments' field.
      * @return The value.
      */
    public java.util.List<avro_generated_types.root_view_entity.content.Attachments> getAttachments() {
      return attachments;
    }

    /**
      * Sets the value of the 'attachments' field.
      * @param value The value of 'attachments'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setAttachments(java.util.List<avro_generated_types.root_view_entity.content.Attachments> value) {
      validate(fields()[4], value);
      this.attachments = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'attachments' field has been set.
      * @return True if the 'attachments' field has been set, false otherwise.
      */
    public boolean hasAttachments() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'attachments' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearAttachments() {
      attachments = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'thumbnail' field.
      * @return The value.
      */
    public java.lang.CharSequence getThumbnail() {
      return thumbnail;
    }

    /**
      * Sets the value of the 'thumbnail' field.
      * @param value The value of 'thumbnail'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setThumbnail(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.thumbnail = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'thumbnail' field has been set.
      * @return True if the 'thumbnail' field has been set, false otherwise.
      */
    public boolean hasThumbnail() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'thumbnail' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearThumbnail() {
      thumbnail = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'interactiveSaleAttachments' field.
      * @return The value.
      */
    public java.util.List<avro_generated_types.root_view_entity.content.Interactivesaleattachments> getInteractiveSaleAttachments() {
      return interactiveSaleAttachments;
    }

    /**
      * Sets the value of the 'interactiveSaleAttachments' field.
      * @param value The value of 'interactiveSaleAttachments'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setInteractiveSaleAttachments(java.util.List<avro_generated_types.root_view_entity.content.Interactivesaleattachments> value) {
      validate(fields()[6], value);
      this.interactiveSaleAttachments = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'interactiveSaleAttachments' field has been set.
      * @return True if the 'interactiveSaleAttachments' field has been set, false otherwise.
      */
    public boolean hasInteractiveSaleAttachments() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'interactiveSaleAttachments' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearInteractiveSaleAttachments() {
      interactiveSaleAttachments = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'mediumPictures' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getMediumPictures() {
      return mediumPictures;
    }

    /**
      * Sets the value of the 'mediumPictures' field.
      * @param value The value of 'mediumPictures'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setMediumPictures(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.mediumPictures = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'mediumPictures' field has been set.
      * @return True if the 'mediumPictures' field has been set, false otherwise.
      */
    public boolean hasMediumPictures() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'mediumPictures' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearMediumPictures() {
      mediumPictures = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'smallPictures' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getSmallPictures() {
      return smallPictures;
    }

    /**
      * Sets the value of the 'smallPictures' field.
      * @param value The value of 'smallPictures'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setSmallPictures(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[8], value);
      this.smallPictures = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'smallPictures' field has been set.
      * @return True if the 'smallPictures' field has been set, false otherwise.
      */
    public boolean hasSmallPictures() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'smallPictures' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearSmallPictures() {
      smallPictures = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'termsAndConditionsImages' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getTermsAndConditionsImages() {
      return termsAndConditionsImages;
    }

    /**
      * Sets the value of the 'termsAndConditionsImages' field.
      * @param value The value of 'termsAndConditionsImages'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder setTermsAndConditionsImages(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[9], value);
      this.termsAndConditionsImages = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'termsAndConditionsImages' field has been set.
      * @return True if the 'termsAndConditionsImages' field has been set, false otherwise.
      */
    public boolean hasTermsAndConditionsImages() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'termsAndConditionsImages' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.Content.Builder clearTermsAndConditionsImages() {
      termsAndConditionsImages = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Content build() {
      try {
        Content record = new Content();
        record.pictures = fieldSetFlags()[0] ? this.pictures : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        record.termsAndConditions = fieldSetFlags()[1] ? this.termsAndConditions : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.facebookCarouselPicture = fieldSetFlags()[2] ? this.facebookCarouselPicture : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.facebookLinkPicture = fieldSetFlags()[3] ? this.facebookLinkPicture : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.attachments = fieldSetFlags()[4] ? this.attachments : (java.util.List<avro_generated_types.root_view_entity.content.Attachments>) defaultValue(fields()[4]);
        record.thumbnail = fieldSetFlags()[5] ? this.thumbnail : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.interactiveSaleAttachments = fieldSetFlags()[6] ? this.interactiveSaleAttachments : (java.util.List<avro_generated_types.root_view_entity.content.Interactivesaleattachments>) defaultValue(fields()[6]);
        record.mediumPictures = fieldSetFlags()[7] ? this.mediumPictures : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        record.smallPictures = fieldSetFlags()[8] ? this.smallPictures : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[8]);
        record.termsAndConditionsImages = fieldSetFlags()[9] ? this.termsAndConditionsImages : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[9]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Content>
    WRITER$ = (org.apache.avro.io.DatumWriter<Content>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Content>
    READER$ = (org.apache.avro.io.DatumReader<Content>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
