/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro_generated_types;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Account extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3812514837277081279L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Account\",\"namespace\":\"avro_generated_types\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"emailEnabled\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"language\",\"type\":[\"null\",\"string\"]},{\"name\":\"__deleted\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"timestamp\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"timestamp-micros\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Account> ENCODER =
      new BinaryMessageEncoder<Account>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Account> DECODER =
      new BinaryMessageDecoder<Account>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Account> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Account> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Account>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Account to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Account from a ByteBuffer. */
  public static Account fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.Boolean active;
  @Deprecated public java.lang.Boolean emailEnabled;
  @Deprecated public java.lang.CharSequence language;
  @Deprecated public java.lang.Boolean __deleted;
  @Deprecated public java.lang.Long timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Account() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param active The new value for active
   * @param emailEnabled The new value for emailEnabled
   * @param language The new value for language
   * @param __deleted The new value for __deleted
   * @param timestamp The new value for timestamp
   */
  public Account(java.lang.CharSequence id, java.lang.Boolean active, java.lang.Boolean emailEnabled, java.lang.CharSequence language, java.lang.Boolean __deleted, java.lang.Long timestamp) {
    this.id = id;
    this.active = active;
    this.emailEnabled = emailEnabled;
    this.language = language;
    this.__deleted = __deleted;
    this.timestamp = timestamp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return active;
    case 2: return emailEnabled;
    case 3: return language;
    case 4: return __deleted;
    case 5: return timestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: active = (java.lang.Boolean)value$; break;
    case 2: emailEnabled = (java.lang.Boolean)value$; break;
    case 3: language = (java.lang.CharSequence)value$; break;
    case 4: __deleted = (java.lang.Boolean)value$; break;
    case 5: timestamp = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }

  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'emailEnabled' field.
   * @return The value of the 'emailEnabled' field.
   */
  public java.lang.Boolean getEmailEnabled() {
    return emailEnabled;
  }

  /**
   * Sets the value of the 'emailEnabled' field.
   * @param value the value to set.
   */
  public void setEmailEnabled(java.lang.Boolean value) {
    this.emailEnabled = value;
  }

  /**
   * Gets the value of the 'language' field.
   * @return The value of the 'language' field.
   */
  public java.lang.CharSequence getLanguage() {
    return language;
  }

  /**
   * Sets the value of the 'language' field.
   * @param value the value to set.
   */
  public void setLanguage(java.lang.CharSequence value) {
    this.language = value;
  }

  /**
   * Gets the value of the '__deleted' field.
   * @return The value of the '__deleted' field.
   */
  public java.lang.Boolean getDeleted$1() {
    return __deleted;
  }

  /**
   * Sets the value of the '__deleted' field.
   * @param value the value to set.
   */
  public void setDeleted$1(java.lang.Boolean value) {
    this.__deleted = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Creates a new Account RecordBuilder.
   * @return A new Account RecordBuilder
   */
  public static avro_generated_types.Account.Builder newBuilder() {
    return new avro_generated_types.Account.Builder();
  }

  /**
   * Creates a new Account RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Account RecordBuilder
   */
  public static avro_generated_types.Account.Builder newBuilder(avro_generated_types.Account.Builder other) {
    return new avro_generated_types.Account.Builder(other);
  }

  /**
   * Creates a new Account RecordBuilder by copying an existing Account instance.
   * @param other The existing instance to copy.
   * @return A new Account RecordBuilder
   */
  public static avro_generated_types.Account.Builder newBuilder(avro_generated_types.Account other) {
    return new avro_generated_types.Account.Builder(other);
  }

  /**
   * RecordBuilder for Account instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Account>
    implements org.apache.avro.data.RecordBuilder<Account> {

    private java.lang.CharSequence id;
    private java.lang.Boolean active;
    private java.lang.Boolean emailEnabled;
    private java.lang.CharSequence language;
    private java.lang.Boolean __deleted;
    private java.lang.Long timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(avro_generated_types.Account.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.active)) {
        this.active = data().deepCopy(fields()[1].schema(), other.active);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.emailEnabled)) {
        this.emailEnabled = data().deepCopy(fields()[2].schema(), other.emailEnabled);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.__deleted)) {
        this.__deleted = data().deepCopy(fields()[4].schema(), other.__deleted);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Account instance
     * @param other The existing instance to copy.
     */
    private Builder(avro_generated_types.Account other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.active)) {
        this.active = data().deepCopy(fields()[1].schema(), other.active);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.emailEnabled)) {
        this.emailEnabled = data().deepCopy(fields()[2].schema(), other.emailEnabled);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.__deleted)) {
        this.__deleted = data().deepCopy(fields()[4].schema(), other.__deleted);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public java.lang.Boolean getActive() {
      return active;
    }

    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder setActive(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.active = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder clearActive() {
      active = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailEnabled' field.
      * @return The value.
      */
    public java.lang.Boolean getEmailEnabled() {
      return emailEnabled;
    }

    /**
      * Sets the value of the 'emailEnabled' field.
      * @param value The value of 'emailEnabled'.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder setEmailEnabled(java.lang.Boolean value) {
      validate(fields()[2], value);
      this.emailEnabled = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'emailEnabled' field has been set.
      * @return True if the 'emailEnabled' field has been set, false otherwise.
      */
    public boolean hasEmailEnabled() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'emailEnabled' field.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder clearEmailEnabled() {
      emailEnabled = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'language' field.
      * @return The value.
      */
    public java.lang.CharSequence getLanguage() {
      return language;
    }

    /**
      * Sets the value of the 'language' field.
      * @param value The value of 'language'.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder setLanguage(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.language = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'language' field has been set.
      * @return True if the 'language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'language' field.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the '__deleted' field.
      * @return The value.
      */
    public java.lang.Boolean getDeleted$1() {
      return __deleted;
    }

    /**
      * Sets the value of the '__deleted' field.
      * @param value The value of '__deleted'.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder setDeleted$1(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.__deleted = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the '__deleted' field has been set.
      * @return True if the '__deleted' field has been set, false otherwise.
      */
    public boolean hasDeleted$1() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the '__deleted' field.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder clearDeleted$1() {
      __deleted = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder setTimestamp(java.lang.Long value) {
      validate(fields()[5], value);
      this.timestamp = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public avro_generated_types.Account.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Account build() {
      try {
        Account record = new Account();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.active = fieldSetFlags()[1] ? this.active : (java.lang.Boolean) defaultValue(fields()[1]);
        record.emailEnabled = fieldSetFlags()[2] ? this.emailEnabled : (java.lang.Boolean) defaultValue(fields()[2]);
        record.language = fieldSetFlags()[3] ? this.language : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.__deleted = fieldSetFlags()[4] ? this.__deleted : (java.lang.Boolean) defaultValue(fields()[4]);
        record.timestamp = fieldSetFlags()[5] ? this.timestamp : (java.lang.Long) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Account>
    WRITER$ = (org.apache.avro.io.DatumWriter<Account>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Account>
    READER$ = (org.apache.avro.io.DatumReader<Account>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
