/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro_generated_types.root_view_entity.auction;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Bidderprofiles extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5714154803101903016L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Bidderprofiles\",\"namespace\":\"avro_generated_types.root_view_entity.auction\",\"fields\":[{\"name\":\"propertyId\",\"type\":[\"null\",\"string\"]},{\"name\":\"accountId\",\"type\":[\"null\",\"string\"]},{\"name\":\"nationalRegistrationNumber\",\"type\":[\"null\",\"string\"]},{\"name\":\"maritalStatus\",\"type\":[\"null\",\"string\"]},{\"name\":\"profileBidderType\",\"type\":[\"null\",\"string\"]},{\"name\":\"inNameOfCompany\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"birthYear\",\"type\":[\"null\",\"long\"]},{\"name\":\"gender\",\"type\":[\"null\",\"string\"]},{\"name\":\"nationality\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence propertyId;
  @Deprecated public java.lang.CharSequence accountId;
  @Deprecated public java.lang.CharSequence nationalRegistrationNumber;
  @Deprecated public java.lang.CharSequence maritalStatus;
  @Deprecated public java.lang.CharSequence profileBidderType;
  @Deprecated public java.lang.Boolean inNameOfCompany;
  @Deprecated public java.lang.Long birthYear;
  @Deprecated public java.lang.CharSequence gender;
  @Deprecated public java.lang.CharSequence nationality;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Bidderprofiles() {}

  /**
   * All-args constructor.
   * @param propertyId The new value for propertyId
   * @param accountId The new value for accountId
   * @param nationalRegistrationNumber The new value for nationalRegistrationNumber
   * @param maritalStatus The new value for maritalStatus
   * @param profileBidderType The new value for profileBidderType
   * @param inNameOfCompany The new value for inNameOfCompany
   * @param birthYear The new value for birthYear
   * @param gender The new value for gender
   * @param nationality The new value for nationality
   */
  public Bidderprofiles(java.lang.CharSequence propertyId, java.lang.CharSequence accountId, java.lang.CharSequence nationalRegistrationNumber, java.lang.CharSequence maritalStatus, java.lang.CharSequence profileBidderType, java.lang.Boolean inNameOfCompany, java.lang.Long birthYear, java.lang.CharSequence gender, java.lang.CharSequence nationality) {
    this.propertyId = propertyId;
    this.accountId = accountId;
    this.nationalRegistrationNumber = nationalRegistrationNumber;
    this.maritalStatus = maritalStatus;
    this.profileBidderType = profileBidderType;
    this.inNameOfCompany = inNameOfCompany;
    this.birthYear = birthYear;
    this.gender = gender;
    this.nationality = nationality;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return propertyId;
    case 1: return accountId;
    case 2: return nationalRegistrationNumber;
    case 3: return maritalStatus;
    case 4: return profileBidderType;
    case 5: return inNameOfCompany;
    case 6: return birthYear;
    case 7: return gender;
    case 8: return nationality;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: propertyId = (java.lang.CharSequence)value$; break;
    case 1: accountId = (java.lang.CharSequence)value$; break;
    case 2: nationalRegistrationNumber = (java.lang.CharSequence)value$; break;
    case 3: maritalStatus = (java.lang.CharSequence)value$; break;
    case 4: profileBidderType = (java.lang.CharSequence)value$; break;
    case 5: inNameOfCompany = (java.lang.Boolean)value$; break;
    case 6: birthYear = (java.lang.Long)value$; break;
    case 7: gender = (java.lang.CharSequence)value$; break;
    case 8: nationality = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'propertyId' field.
   * @return The value of the 'propertyId' field.
   */
  public java.lang.CharSequence getPropertyId() {
    return propertyId;
  }

  /**
   * Sets the value of the 'propertyId' field.
   * @param value the value to set.
   */
  public void setPropertyId(java.lang.CharSequence value) {
    this.propertyId = value;
  }

  /**
   * Gets the value of the 'accountId' field.
   * @return The value of the 'accountId' field.
   */
  public java.lang.CharSequence getAccountId() {
    return accountId;
  }

  /**
   * Sets the value of the 'accountId' field.
   * @param value the value to set.
   */
  public void setAccountId(java.lang.CharSequence value) {
    this.accountId = value;
  }

  /**
   * Gets the value of the 'nationalRegistrationNumber' field.
   * @return The value of the 'nationalRegistrationNumber' field.
   */
  public java.lang.CharSequence getNationalRegistrationNumber() {
    return nationalRegistrationNumber;
  }

  /**
   * Sets the value of the 'nationalRegistrationNumber' field.
   * @param value the value to set.
   */
  public void setNationalRegistrationNumber(java.lang.CharSequence value) {
    this.nationalRegistrationNumber = value;
  }

  /**
   * Gets the value of the 'maritalStatus' field.
   * @return The value of the 'maritalStatus' field.
   */
  public java.lang.CharSequence getMaritalStatus() {
    return maritalStatus;
  }

  /**
   * Sets the value of the 'maritalStatus' field.
   * @param value the value to set.
   */
  public void setMaritalStatus(java.lang.CharSequence value) {
    this.maritalStatus = value;
  }

  /**
   * Gets the value of the 'profileBidderType' field.
   * @return The value of the 'profileBidderType' field.
   */
  public java.lang.CharSequence getProfileBidderType() {
    return profileBidderType;
  }

  /**
   * Sets the value of the 'profileBidderType' field.
   * @param value the value to set.
   */
  public void setProfileBidderType(java.lang.CharSequence value) {
    this.profileBidderType = value;
  }

  /**
   * Gets the value of the 'inNameOfCompany' field.
   * @return The value of the 'inNameOfCompany' field.
   */
  public java.lang.Boolean getInNameOfCompany() {
    return inNameOfCompany;
  }

  /**
   * Sets the value of the 'inNameOfCompany' field.
   * @param value the value to set.
   */
  public void setInNameOfCompany(java.lang.Boolean value) {
    this.inNameOfCompany = value;
  }

  /**
   * Gets the value of the 'birthYear' field.
   * @return The value of the 'birthYear' field.
   */
  public java.lang.Long getBirthYear() {
    return birthYear;
  }

  /**
   * Sets the value of the 'birthYear' field.
   * @param value the value to set.
   */
  public void setBirthYear(java.lang.Long value) {
    this.birthYear = value;
  }

  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public java.lang.CharSequence getGender() {
    return gender;
  }

  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(java.lang.CharSequence value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'nationality' field.
   * @return The value of the 'nationality' field.
   */
  public java.lang.CharSequence getNationality() {
    return nationality;
  }

  /**
   * Sets the value of the 'nationality' field.
   * @param value the value to set.
   */
  public void setNationality(java.lang.CharSequence value) {
    this.nationality = value;
  }

  /**
   * Creates a new Bidderprofiles RecordBuilder.
   * @return A new Bidderprofiles RecordBuilder
   */
  public static avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder newBuilder() {
    return new avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder();
  }

  /**
   * Creates a new Bidderprofiles RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Bidderprofiles RecordBuilder
   */
  public static avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder newBuilder(avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder other) {
    return new avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder(other);
  }

  /**
   * Creates a new Bidderprofiles RecordBuilder by copying an existing Bidderprofiles instance.
   * @param other The existing instance to copy.
   * @return A new Bidderprofiles RecordBuilder
   */
  public static avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder newBuilder(avro_generated_types.root_view_entity.auction.Bidderprofiles other) {
    return new avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder(other);
  }

  /**
   * RecordBuilder for Bidderprofiles instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Bidderprofiles>
    implements org.apache.avro.data.RecordBuilder<Bidderprofiles> {

    private java.lang.CharSequence propertyId;
    private java.lang.CharSequence accountId;
    private java.lang.CharSequence nationalRegistrationNumber;
    private java.lang.CharSequence maritalStatus;
    private java.lang.CharSequence profileBidderType;
    private java.lang.Boolean inNameOfCompany;
    private java.lang.Long birthYear;
    private java.lang.CharSequence gender;
    private java.lang.CharSequence nationality;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.propertyId)) {
        this.propertyId = data().deepCopy(fields()[0].schema(), other.propertyId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountId)) {
        this.accountId = data().deepCopy(fields()[1].schema(), other.accountId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nationalRegistrationNumber)) {
        this.nationalRegistrationNumber = data().deepCopy(fields()[2].schema(), other.nationalRegistrationNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.maritalStatus)) {
        this.maritalStatus = data().deepCopy(fields()[3].schema(), other.maritalStatus);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.profileBidderType)) {
        this.profileBidderType = data().deepCopy(fields()[4].schema(), other.profileBidderType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.inNameOfCompany)) {
        this.inNameOfCompany = data().deepCopy(fields()[5].schema(), other.inNameOfCompany);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.birthYear)) {
        this.birthYear = data().deepCopy(fields()[6].schema(), other.birthYear);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.gender)) {
        this.gender = data().deepCopy(fields()[7].schema(), other.gender);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nationality)) {
        this.nationality = data().deepCopy(fields()[8].schema(), other.nationality);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Bidderprofiles instance
     * @param other The existing instance to copy.
     */
    private Builder(avro_generated_types.root_view_entity.auction.Bidderprofiles other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.propertyId)) {
        this.propertyId = data().deepCopy(fields()[0].schema(), other.propertyId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountId)) {
        this.accountId = data().deepCopy(fields()[1].schema(), other.accountId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nationalRegistrationNumber)) {
        this.nationalRegistrationNumber = data().deepCopy(fields()[2].schema(), other.nationalRegistrationNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.maritalStatus)) {
        this.maritalStatus = data().deepCopy(fields()[3].schema(), other.maritalStatus);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.profileBidderType)) {
        this.profileBidderType = data().deepCopy(fields()[4].schema(), other.profileBidderType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.inNameOfCompany)) {
        this.inNameOfCompany = data().deepCopy(fields()[5].schema(), other.inNameOfCompany);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.birthYear)) {
        this.birthYear = data().deepCopy(fields()[6].schema(), other.birthYear);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.gender)) {
        this.gender = data().deepCopy(fields()[7].schema(), other.gender);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nationality)) {
        this.nationality = data().deepCopy(fields()[8].schema(), other.nationality);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'propertyId' field.
      * @return The value.
      */
    public java.lang.CharSequence getPropertyId() {
      return propertyId;
    }

    /**
      * Sets the value of the 'propertyId' field.
      * @param value The value of 'propertyId'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder setPropertyId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.propertyId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'propertyId' field has been set.
      * @return True if the 'propertyId' field has been set, false otherwise.
      */
    public boolean hasPropertyId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'propertyId' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder clearPropertyId() {
      propertyId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountId' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountId() {
      return accountId;
    }

    /**
      * Sets the value of the 'accountId' field.
      * @param value The value of 'accountId'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder setAccountId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.accountId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'accountId' field has been set.
      * @return True if the 'accountId' field has been set, false otherwise.
      */
    public boolean hasAccountId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'accountId' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder clearAccountId() {
      accountId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'nationalRegistrationNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getNationalRegistrationNumber() {
      return nationalRegistrationNumber;
    }

    /**
      * Sets the value of the 'nationalRegistrationNumber' field.
      * @param value The value of 'nationalRegistrationNumber'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder setNationalRegistrationNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.nationalRegistrationNumber = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'nationalRegistrationNumber' field has been set.
      * @return True if the 'nationalRegistrationNumber' field has been set, false otherwise.
      */
    public boolean hasNationalRegistrationNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'nationalRegistrationNumber' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder clearNationalRegistrationNumber() {
      nationalRegistrationNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'maritalStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getMaritalStatus() {
      return maritalStatus;
    }

    /**
      * Sets the value of the 'maritalStatus' field.
      * @param value The value of 'maritalStatus'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder setMaritalStatus(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.maritalStatus = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'maritalStatus' field has been set.
      * @return True if the 'maritalStatus' field has been set, false otherwise.
      */
    public boolean hasMaritalStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'maritalStatus' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder clearMaritalStatus() {
      maritalStatus = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'profileBidderType' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileBidderType() {
      return profileBidderType;
    }

    /**
      * Sets the value of the 'profileBidderType' field.
      * @param value The value of 'profileBidderType'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder setProfileBidderType(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.profileBidderType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'profileBidderType' field has been set.
      * @return True if the 'profileBidderType' field has been set, false otherwise.
      */
    public boolean hasProfileBidderType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'profileBidderType' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder clearProfileBidderType() {
      profileBidderType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'inNameOfCompany' field.
      * @return The value.
      */
    public java.lang.Boolean getInNameOfCompany() {
      return inNameOfCompany;
    }

    /**
      * Sets the value of the 'inNameOfCompany' field.
      * @param value The value of 'inNameOfCompany'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder setInNameOfCompany(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.inNameOfCompany = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'inNameOfCompany' field has been set.
      * @return True if the 'inNameOfCompany' field has been set, false otherwise.
      */
    public boolean hasInNameOfCompany() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'inNameOfCompany' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder clearInNameOfCompany() {
      inNameOfCompany = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthYear' field.
      * @return The value.
      */
    public java.lang.Long getBirthYear() {
      return birthYear;
    }

    /**
      * Sets the value of the 'birthYear' field.
      * @param value The value of 'birthYear'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder setBirthYear(java.lang.Long value) {
      validate(fields()[6], value);
      this.birthYear = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'birthYear' field has been set.
      * @return True if the 'birthYear' field has been set, false otherwise.
      */
    public boolean hasBirthYear() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'birthYear' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder clearBirthYear() {
      birthYear = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public java.lang.CharSequence getGender() {
      return gender;
    }

    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder setGender(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.gender = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder clearGender() {
      gender = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'nationality' field.
      * @return The value.
      */
    public java.lang.CharSequence getNationality() {
      return nationality;
    }

    /**
      * Sets the value of the 'nationality' field.
      * @param value The value of 'nationality'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder setNationality(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.nationality = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'nationality' field has been set.
      * @return True if the 'nationality' field has been set, false otherwise.
      */
    public boolean hasNationality() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'nationality' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.auction.Bidderprofiles.Builder clearNationality() {
      nationality = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public Bidderprofiles build() {
      try {
        Bidderprofiles record = new Bidderprofiles();
        record.propertyId = fieldSetFlags()[0] ? this.propertyId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.accountId = fieldSetFlags()[1] ? this.accountId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.nationalRegistrationNumber = fieldSetFlags()[2] ? this.nationalRegistrationNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.maritalStatus = fieldSetFlags()[3] ? this.maritalStatus : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.profileBidderType = fieldSetFlags()[4] ? this.profileBidderType : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.inNameOfCompany = fieldSetFlags()[5] ? this.inNameOfCompany : (java.lang.Boolean) defaultValue(fields()[5]);
        record.birthYear = fieldSetFlags()[6] ? this.birthYear : (java.lang.Long) defaultValue(fields()[6]);
        record.gender = fieldSetFlags()[7] ? this.gender : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.nationality = fieldSetFlags()[8] ? this.nationality : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
