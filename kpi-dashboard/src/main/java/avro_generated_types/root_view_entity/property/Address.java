/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro_generated_types.root_view_entity.property;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Address extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7969491473079472501L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Address\",\"namespace\":\"avro_generated_types.root_view_entity.property\",\"fields\":[{\"name\":\"countryCode\",\"type\":[\"null\",\"string\"]},{\"name\":\"estateNumber\",\"type\":[\"null\",\"string\"]},{\"name\":\"municipality\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Municipality\",\"namespace\":\"avro_generated_types.root_view_entity.property.address\",\"fields\":[{\"name\":\"nl\",\"type\":[\"null\",\"string\"]},{\"name\":\"fr\",\"type\":[\"null\",\"string\"]},{\"name\":\"en\",\"type\":[\"null\",\"string\"]},{\"name\":\"de\",\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"postalCode\",\"type\":[\"null\",\"string\"]},{\"name\":\"street\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Street\",\"namespace\":\"avro_generated_types.root_view_entity.property.address\",\"fields\":[{\"name\":\"nl\",\"type\":[\"null\",\"string\"]},{\"name\":\"fr\",\"type\":[\"null\",\"string\"]},{\"name\":\"en\",\"type\":[\"null\",\"string\"]},{\"name\":\"de\",\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"locality\",\"type\":[\"null\",\"string\"]},{\"name\":\"estateBoxNumber\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence countryCode;
  @Deprecated public java.lang.CharSequence estateNumber;
  @Deprecated public avro_generated_types.root_view_entity.property.address.Municipality municipality;
  @Deprecated public java.lang.CharSequence postalCode;
  @Deprecated public avro_generated_types.root_view_entity.property.address.Street street;
  @Deprecated public java.lang.CharSequence locality;
  @Deprecated public java.lang.CharSequence estateBoxNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Address() {}

  /**
   * All-args constructor.
   * @param countryCode The new value for countryCode
   * @param estateNumber The new value for estateNumber
   * @param municipality The new value for municipality
   * @param postalCode The new value for postalCode
   * @param street The new value for street
   * @param locality The new value for locality
   * @param estateBoxNumber The new value for estateBoxNumber
   */
  public Address(java.lang.CharSequence countryCode, java.lang.CharSequence estateNumber, avro_generated_types.root_view_entity.property.address.Municipality municipality, java.lang.CharSequence postalCode, avro_generated_types.root_view_entity.property.address.Street street, java.lang.CharSequence locality, java.lang.CharSequence estateBoxNumber) {
    this.countryCode = countryCode;
    this.estateNumber = estateNumber;
    this.municipality = municipality;
    this.postalCode = postalCode;
    this.street = street;
    this.locality = locality;
    this.estateBoxNumber = estateBoxNumber;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return countryCode;
    case 1: return estateNumber;
    case 2: return municipality;
    case 3: return postalCode;
    case 4: return street;
    case 5: return locality;
    case 6: return estateBoxNumber;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: countryCode = (java.lang.CharSequence)value$; break;
    case 1: estateNumber = (java.lang.CharSequence)value$; break;
    case 2: municipality = (avro_generated_types.root_view_entity.property.address.Municipality)value$; break;
    case 3: postalCode = (java.lang.CharSequence)value$; break;
    case 4: street = (avro_generated_types.root_view_entity.property.address.Street)value$; break;
    case 5: locality = (java.lang.CharSequence)value$; break;
    case 6: estateBoxNumber = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'countryCode' field.
   * @return The value of the 'countryCode' field.
   */
  public java.lang.CharSequence getCountryCode() {
    return countryCode;
  }

  /**
   * Sets the value of the 'countryCode' field.
   * @param value the value to set.
   */
  public void setCountryCode(java.lang.CharSequence value) {
    this.countryCode = value;
  }

  /**
   * Gets the value of the 'estateNumber' field.
   * @return The value of the 'estateNumber' field.
   */
  public java.lang.CharSequence getEstateNumber() {
    return estateNumber;
  }

  /**
   * Sets the value of the 'estateNumber' field.
   * @param value the value to set.
   */
  public void setEstateNumber(java.lang.CharSequence value) {
    this.estateNumber = value;
  }

  /**
   * Gets the value of the 'municipality' field.
   * @return The value of the 'municipality' field.
   */
  public avro_generated_types.root_view_entity.property.address.Municipality getMunicipality() {
    return municipality;
  }

  /**
   * Sets the value of the 'municipality' field.
   * @param value the value to set.
   */
  public void setMunicipality(avro_generated_types.root_view_entity.property.address.Municipality value) {
    this.municipality = value;
  }

  /**
   * Gets the value of the 'postalCode' field.
   * @return The value of the 'postalCode' field.
   */
  public java.lang.CharSequence getPostalCode() {
    return postalCode;
  }

  /**
   * Sets the value of the 'postalCode' field.
   * @param value the value to set.
   */
  public void setPostalCode(java.lang.CharSequence value) {
    this.postalCode = value;
  }

  /**
   * Gets the value of the 'street' field.
   * @return The value of the 'street' field.
   */
  public avro_generated_types.root_view_entity.property.address.Street getStreet() {
    return street;
  }

  /**
   * Sets the value of the 'street' field.
   * @param value the value to set.
   */
  public void setStreet(avro_generated_types.root_view_entity.property.address.Street value) {
    this.street = value;
  }

  /**
   * Gets the value of the 'locality' field.
   * @return The value of the 'locality' field.
   */
  public java.lang.CharSequence getLocality() {
    return locality;
  }

  /**
   * Sets the value of the 'locality' field.
   * @param value the value to set.
   */
  public void setLocality(java.lang.CharSequence value) {
    this.locality = value;
  }

  /**
   * Gets the value of the 'estateBoxNumber' field.
   * @return The value of the 'estateBoxNumber' field.
   */
  public java.lang.CharSequence getEstateBoxNumber() {
    return estateBoxNumber;
  }

  /**
   * Sets the value of the 'estateBoxNumber' field.
   * @param value the value to set.
   */
  public void setEstateBoxNumber(java.lang.CharSequence value) {
    this.estateBoxNumber = value;
  }

  /**
   * Creates a new Address RecordBuilder.
   * @return A new Address RecordBuilder
   */
  public static avro_generated_types.root_view_entity.property.Address.Builder newBuilder() {
    return new avro_generated_types.root_view_entity.property.Address.Builder();
  }

  /**
   * Creates a new Address RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Address RecordBuilder
   */
  public static avro_generated_types.root_view_entity.property.Address.Builder newBuilder(avro_generated_types.root_view_entity.property.Address.Builder other) {
    return new avro_generated_types.root_view_entity.property.Address.Builder(other);
  }

  /**
   * Creates a new Address RecordBuilder by copying an existing Address instance.
   * @param other The existing instance to copy.
   * @return A new Address RecordBuilder
   */
  public static avro_generated_types.root_view_entity.property.Address.Builder newBuilder(avro_generated_types.root_view_entity.property.Address other) {
    return new avro_generated_types.root_view_entity.property.Address.Builder(other);
  }

  /**
   * RecordBuilder for Address instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Address>
    implements org.apache.avro.data.RecordBuilder<Address> {

    private java.lang.CharSequence countryCode;
    private java.lang.CharSequence estateNumber;
    private avro_generated_types.root_view_entity.property.address.Municipality municipality;
    private avro_generated_types.root_view_entity.property.address.Municipality.Builder municipalityBuilder;
    private java.lang.CharSequence postalCode;
    private avro_generated_types.root_view_entity.property.address.Street street;
    private avro_generated_types.root_view_entity.property.address.Street.Builder streetBuilder;
    private java.lang.CharSequence locality;
    private java.lang.CharSequence estateBoxNumber;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(avro_generated_types.root_view_entity.property.Address.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[0].schema(), other.countryCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.estateNumber)) {
        this.estateNumber = data().deepCopy(fields()[1].schema(), other.estateNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.municipality)) {
        this.municipality = data().deepCopy(fields()[2].schema(), other.municipality);
        fieldSetFlags()[2] = true;
      }
      if (other.hasMunicipalityBuilder()) {
        this.municipalityBuilder = avro_generated_types.root_view_entity.property.address.Municipality.newBuilder(other.getMunicipalityBuilder());
      }
      if (isValidValue(fields()[3], other.postalCode)) {
        this.postalCode = data().deepCopy(fields()[3].schema(), other.postalCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.street)) {
        this.street = data().deepCopy(fields()[4].schema(), other.street);
        fieldSetFlags()[4] = true;
      }
      if (other.hasStreetBuilder()) {
        this.streetBuilder = avro_generated_types.root_view_entity.property.address.Street.newBuilder(other.getStreetBuilder());
      }
      if (isValidValue(fields()[5], other.locality)) {
        this.locality = data().deepCopy(fields()[5].schema(), other.locality);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.estateBoxNumber)) {
        this.estateBoxNumber = data().deepCopy(fields()[6].schema(), other.estateBoxNumber);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Address instance
     * @param other The existing instance to copy.
     */
    private Builder(avro_generated_types.root_view_entity.property.Address other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[0].schema(), other.countryCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.estateNumber)) {
        this.estateNumber = data().deepCopy(fields()[1].schema(), other.estateNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.municipality)) {
        this.municipality = data().deepCopy(fields()[2].schema(), other.municipality);
        fieldSetFlags()[2] = true;
      }
      this.municipalityBuilder = null;
      if (isValidValue(fields()[3], other.postalCode)) {
        this.postalCode = data().deepCopy(fields()[3].schema(), other.postalCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.street)) {
        this.street = data().deepCopy(fields()[4].schema(), other.street);
        fieldSetFlags()[4] = true;
      }
      this.streetBuilder = null;
      if (isValidValue(fields()[5], other.locality)) {
        this.locality = data().deepCopy(fields()[5].schema(), other.locality);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.estateBoxNumber)) {
        this.estateBoxNumber = data().deepCopy(fields()[6].schema(), other.estateBoxNumber);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'countryCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountryCode() {
      return countryCode;
    }

    /**
      * Sets the value of the 'countryCode' field.
      * @param value The value of 'countryCode'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder setCountryCode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.countryCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'countryCode' field has been set.
      * @return True if the 'countryCode' field has been set, false otherwise.
      */
    public boolean hasCountryCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'countryCode' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder clearCountryCode() {
      countryCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'estateNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getEstateNumber() {
      return estateNumber;
    }

    /**
      * Sets the value of the 'estateNumber' field.
      * @param value The value of 'estateNumber'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder setEstateNumber(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.estateNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'estateNumber' field has been set.
      * @return True if the 'estateNumber' field has been set, false otherwise.
      */
    public boolean hasEstateNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'estateNumber' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder clearEstateNumber() {
      estateNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'municipality' field.
      * @return The value.
      */
    public avro_generated_types.root_view_entity.property.address.Municipality getMunicipality() {
      return municipality;
    }

    /**
      * Sets the value of the 'municipality' field.
      * @param value The value of 'municipality'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder setMunicipality(avro_generated_types.root_view_entity.property.address.Municipality value) {
      validate(fields()[2], value);
      this.municipalityBuilder = null;
      this.municipality = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'municipality' field has been set.
      * @return True if the 'municipality' field has been set, false otherwise.
      */
    public boolean hasMunicipality() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'municipality' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public avro_generated_types.root_view_entity.property.address.Municipality.Builder getMunicipalityBuilder() {
      if (municipalityBuilder == null) {
        if (hasMunicipality()) {
          setMunicipalityBuilder(avro_generated_types.root_view_entity.property.address.Municipality.newBuilder(municipality));
        } else {
          setMunicipalityBuilder(avro_generated_types.root_view_entity.property.address.Municipality.newBuilder());
        }
      }
      return municipalityBuilder;
    }

    /**
     * Sets the Builder instance for the 'municipality' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public avro_generated_types.root_view_entity.property.Address.Builder setMunicipalityBuilder(avro_generated_types.root_view_entity.property.address.Municipality.Builder value) {
      clearMunicipality();
      municipalityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'municipality' field has an active Builder instance
     * @return True if the 'municipality' field has an active Builder instance
     */
    public boolean hasMunicipalityBuilder() {
      return municipalityBuilder != null;
    }

    /**
      * Clears the value of the 'municipality' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder clearMunicipality() {
      municipality = null;
      municipalityBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'postalCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getPostalCode() {
      return postalCode;
    }

    /**
      * Sets the value of the 'postalCode' field.
      * @param value The value of 'postalCode'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder setPostalCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.postalCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'postalCode' field has been set.
      * @return True if the 'postalCode' field has been set, false otherwise.
      */
    public boolean hasPostalCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'postalCode' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder clearPostalCode() {
      postalCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'street' field.
      * @return The value.
      */
    public avro_generated_types.root_view_entity.property.address.Street getStreet() {
      return street;
    }

    /**
      * Sets the value of the 'street' field.
      * @param value The value of 'street'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder setStreet(avro_generated_types.root_view_entity.property.address.Street value) {
      validate(fields()[4], value);
      this.streetBuilder = null;
      this.street = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'street' field has been set.
      * @return True if the 'street' field has been set, false otherwise.
      */
    public boolean hasStreet() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'street' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public avro_generated_types.root_view_entity.property.address.Street.Builder getStreetBuilder() {
      if (streetBuilder == null) {
        if (hasStreet()) {
          setStreetBuilder(avro_generated_types.root_view_entity.property.address.Street.newBuilder(street));
        } else {
          setStreetBuilder(avro_generated_types.root_view_entity.property.address.Street.newBuilder());
        }
      }
      return streetBuilder;
    }

    /**
     * Sets the Builder instance for the 'street' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public avro_generated_types.root_view_entity.property.Address.Builder setStreetBuilder(avro_generated_types.root_view_entity.property.address.Street.Builder value) {
      clearStreet();
      streetBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'street' field has an active Builder instance
     * @return True if the 'street' field has an active Builder instance
     */
    public boolean hasStreetBuilder() {
      return streetBuilder != null;
    }

    /**
      * Clears the value of the 'street' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder clearStreet() {
      street = null;
      streetBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'locality' field.
      * @return The value.
      */
    public java.lang.CharSequence getLocality() {
      return locality;
    }

    /**
      * Sets the value of the 'locality' field.
      * @param value The value of 'locality'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder setLocality(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.locality = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'locality' field has been set.
      * @return True if the 'locality' field has been set, false otherwise.
      */
    public boolean hasLocality() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'locality' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder clearLocality() {
      locality = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'estateBoxNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getEstateBoxNumber() {
      return estateBoxNumber;
    }

    /**
      * Sets the value of the 'estateBoxNumber' field.
      * @param value The value of 'estateBoxNumber'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder setEstateBoxNumber(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.estateBoxNumber = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'estateBoxNumber' field has been set.
      * @return True if the 'estateBoxNumber' field has been set, false otherwise.
      */
    public boolean hasEstateBoxNumber() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'estateBoxNumber' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Address.Builder clearEstateBoxNumber() {
      estateBoxNumber = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Address build() {
      try {
        Address record = new Address();
        record.countryCode = fieldSetFlags()[0] ? this.countryCode : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.estateNumber = fieldSetFlags()[1] ? this.estateNumber : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (municipalityBuilder != null) {
          record.municipality = this.municipalityBuilder.build();
        } else {
          record.municipality = fieldSetFlags()[2] ? this.municipality : (avro_generated_types.root_view_entity.property.address.Municipality) defaultValue(fields()[2]);
        }
        record.postalCode = fieldSetFlags()[3] ? this.postalCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (streetBuilder != null) {
          record.street = this.streetBuilder.build();
        } else {
          record.street = fieldSetFlags()[4] ? this.street : (avro_generated_types.root_view_entity.property.address.Street) defaultValue(fields()[4]);
        }
        record.locality = fieldSetFlags()[5] ? this.locality : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.estateBoxNumber = fieldSetFlags()[6] ? this.estateBoxNumber : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
