/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro_generated_types.root_view_entity.property;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Financial extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8921909819628448659L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Financial\",\"namespace\":\"avro_generated_types.root_view_entity.property\",\"fields\":[{\"name\":\"landIncome\",\"type\":[\"null\",\"string\"]},{\"name\":\"constructionYear\",\"type\":[\"null\",\"long\"]},{\"name\":\"freeFrom\",\"type\":[\"null\",\"string\"]},{\"name\":\"isLandIncomeToBeDefined\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"estimatedPrice\",\"type\":[\"null\",\"string\"]},{\"name\":\"isInvestmentProperty\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"monthlyExpenses\",\"type\":[\"null\",\"string\"]},{\"name\":\"sellingPrice\",\"type\":[\"null\",\"string\"]},{\"name\":\"sellingPriceLabel\",\"type\":[\"null\",\"string\"]},{\"name\":\"pricePerSquareMeter\",\"type\":[\"null\",\"string\"]},{\"name\":\"isNewConstruction\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"newConstructionType\",\"type\":[\"null\",\"string\"]},{\"name\":\"monthlyRent\",\"type\":[\"null\",\"string\"]},{\"name\":\"annualRent\",\"type\":[\"null\",\"string\"]},{\"name\":\"amountBouquet\",\"type\":[\"null\",\"string\"]},{\"name\":\"isAnnuityAmount\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"annuityAmount\",\"type\":[\"null\",\"string\"]},{\"name\":\"isAnnuityAvailable\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"availableDate\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"timestamp-micros\"}]},{\"name\":\"isAnnuityIndexed\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"annuityYearLimitation\",\"type\":[\"null\",\"long\"]},{\"name\":\"annuityAgeOfPerson1\",\"type\":[\"null\",\"long\"]},{\"name\":\"annuityAgeOfPerson2\",\"type\":[\"null\",\"long\"]},{\"name\":\"percentageCurrentRent\",\"type\":[\"null\",\"long\"]},{\"name\":\"stockInTradePrice\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence landIncome;
  @Deprecated public java.lang.Long constructionYear;
  @Deprecated public java.lang.CharSequence freeFrom;
  @Deprecated public java.lang.Boolean isLandIncomeToBeDefined;
  @Deprecated public java.lang.CharSequence estimatedPrice;
  @Deprecated public java.lang.Boolean isInvestmentProperty;
  @Deprecated public java.lang.CharSequence monthlyExpenses;
  @Deprecated public java.lang.CharSequence sellingPrice;
  @Deprecated public java.lang.CharSequence sellingPriceLabel;
  @Deprecated public java.lang.CharSequence pricePerSquareMeter;
  @Deprecated public java.lang.Boolean isNewConstruction;
  @Deprecated public java.lang.CharSequence newConstructionType;
  @Deprecated public java.lang.CharSequence monthlyRent;
  @Deprecated public java.lang.CharSequence annualRent;
  @Deprecated public java.lang.CharSequence amountBouquet;
  @Deprecated public java.lang.Boolean isAnnuityAmount;
  @Deprecated public java.lang.CharSequence annuityAmount;
  @Deprecated public java.lang.Boolean isAnnuityAvailable;
  @Deprecated public java.lang.Long availableDate;
  @Deprecated public java.lang.Boolean isAnnuityIndexed;
  @Deprecated public java.lang.Long annuityYearLimitation;
  @Deprecated public java.lang.Long annuityAgeOfPerson1;
  @Deprecated public java.lang.Long annuityAgeOfPerson2;
  @Deprecated public java.lang.Long percentageCurrentRent;
  @Deprecated public java.lang.CharSequence stockInTradePrice;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Financial() {}

  /**
   * All-args constructor.
   * @param landIncome The new value for landIncome
   * @param constructionYear The new value for constructionYear
   * @param freeFrom The new value for freeFrom
   * @param isLandIncomeToBeDefined The new value for isLandIncomeToBeDefined
   * @param estimatedPrice The new value for estimatedPrice
   * @param isInvestmentProperty The new value for isInvestmentProperty
   * @param monthlyExpenses The new value for monthlyExpenses
   * @param sellingPrice The new value for sellingPrice
   * @param sellingPriceLabel The new value for sellingPriceLabel
   * @param pricePerSquareMeter The new value for pricePerSquareMeter
   * @param isNewConstruction The new value for isNewConstruction
   * @param newConstructionType The new value for newConstructionType
   * @param monthlyRent The new value for monthlyRent
   * @param annualRent The new value for annualRent
   * @param amountBouquet The new value for amountBouquet
   * @param isAnnuityAmount The new value for isAnnuityAmount
   * @param annuityAmount The new value for annuityAmount
   * @param isAnnuityAvailable The new value for isAnnuityAvailable
   * @param availableDate The new value for availableDate
   * @param isAnnuityIndexed The new value for isAnnuityIndexed
   * @param annuityYearLimitation The new value for annuityYearLimitation
   * @param annuityAgeOfPerson1 The new value for annuityAgeOfPerson1
   * @param annuityAgeOfPerson2 The new value for annuityAgeOfPerson2
   * @param percentageCurrentRent The new value for percentageCurrentRent
   * @param stockInTradePrice The new value for stockInTradePrice
   */
  public Financial(java.lang.CharSequence landIncome, java.lang.Long constructionYear, java.lang.CharSequence freeFrom, java.lang.Boolean isLandIncomeToBeDefined, java.lang.CharSequence estimatedPrice, java.lang.Boolean isInvestmentProperty, java.lang.CharSequence monthlyExpenses, java.lang.CharSequence sellingPrice, java.lang.CharSequence sellingPriceLabel, java.lang.CharSequence pricePerSquareMeter, java.lang.Boolean isNewConstruction, java.lang.CharSequence newConstructionType, java.lang.CharSequence monthlyRent, java.lang.CharSequence annualRent, java.lang.CharSequence amountBouquet, java.lang.Boolean isAnnuityAmount, java.lang.CharSequence annuityAmount, java.lang.Boolean isAnnuityAvailable, java.lang.Long availableDate, java.lang.Boolean isAnnuityIndexed, java.lang.Long annuityYearLimitation, java.lang.Long annuityAgeOfPerson1, java.lang.Long annuityAgeOfPerson2, java.lang.Long percentageCurrentRent, java.lang.CharSequence stockInTradePrice) {
    this.landIncome = landIncome;
    this.constructionYear = constructionYear;
    this.freeFrom = freeFrom;
    this.isLandIncomeToBeDefined = isLandIncomeToBeDefined;
    this.estimatedPrice = estimatedPrice;
    this.isInvestmentProperty = isInvestmentProperty;
    this.monthlyExpenses = monthlyExpenses;
    this.sellingPrice = sellingPrice;
    this.sellingPriceLabel = sellingPriceLabel;
    this.pricePerSquareMeter = pricePerSquareMeter;
    this.isNewConstruction = isNewConstruction;
    this.newConstructionType = newConstructionType;
    this.monthlyRent = monthlyRent;
    this.annualRent = annualRent;
    this.amountBouquet = amountBouquet;
    this.isAnnuityAmount = isAnnuityAmount;
    this.annuityAmount = annuityAmount;
    this.isAnnuityAvailable = isAnnuityAvailable;
    this.availableDate = availableDate;
    this.isAnnuityIndexed = isAnnuityIndexed;
    this.annuityYearLimitation = annuityYearLimitation;
    this.annuityAgeOfPerson1 = annuityAgeOfPerson1;
    this.annuityAgeOfPerson2 = annuityAgeOfPerson2;
    this.percentageCurrentRent = percentageCurrentRent;
    this.stockInTradePrice = stockInTradePrice;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return landIncome;
    case 1: return constructionYear;
    case 2: return freeFrom;
    case 3: return isLandIncomeToBeDefined;
    case 4: return estimatedPrice;
    case 5: return isInvestmentProperty;
    case 6: return monthlyExpenses;
    case 7: return sellingPrice;
    case 8: return sellingPriceLabel;
    case 9: return pricePerSquareMeter;
    case 10: return isNewConstruction;
    case 11: return newConstructionType;
    case 12: return monthlyRent;
    case 13: return annualRent;
    case 14: return amountBouquet;
    case 15: return isAnnuityAmount;
    case 16: return annuityAmount;
    case 17: return isAnnuityAvailable;
    case 18: return availableDate;
    case 19: return isAnnuityIndexed;
    case 20: return annuityYearLimitation;
    case 21: return annuityAgeOfPerson1;
    case 22: return annuityAgeOfPerson2;
    case 23: return percentageCurrentRent;
    case 24: return stockInTradePrice;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: landIncome = (java.lang.CharSequence)value$; break;
    case 1: constructionYear = (java.lang.Long)value$; break;
    case 2: freeFrom = (java.lang.CharSequence)value$; break;
    case 3: isLandIncomeToBeDefined = (java.lang.Boolean)value$; break;
    case 4: estimatedPrice = (java.lang.CharSequence)value$; break;
    case 5: isInvestmentProperty = (java.lang.Boolean)value$; break;
    case 6: monthlyExpenses = (java.lang.CharSequence)value$; break;
    case 7: sellingPrice = (java.lang.CharSequence)value$; break;
    case 8: sellingPriceLabel = (java.lang.CharSequence)value$; break;
    case 9: pricePerSquareMeter = (java.lang.CharSequence)value$; break;
    case 10: isNewConstruction = (java.lang.Boolean)value$; break;
    case 11: newConstructionType = (java.lang.CharSequence)value$; break;
    case 12: monthlyRent = (java.lang.CharSequence)value$; break;
    case 13: annualRent = (java.lang.CharSequence)value$; break;
    case 14: amountBouquet = (java.lang.CharSequence)value$; break;
    case 15: isAnnuityAmount = (java.lang.Boolean)value$; break;
    case 16: annuityAmount = (java.lang.CharSequence)value$; break;
    case 17: isAnnuityAvailable = (java.lang.Boolean)value$; break;
    case 18: availableDate = (java.lang.Long)value$; break;
    case 19: isAnnuityIndexed = (java.lang.Boolean)value$; break;
    case 20: annuityYearLimitation = (java.lang.Long)value$; break;
    case 21: annuityAgeOfPerson1 = (java.lang.Long)value$; break;
    case 22: annuityAgeOfPerson2 = (java.lang.Long)value$; break;
    case 23: percentageCurrentRent = (java.lang.Long)value$; break;
    case 24: stockInTradePrice = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'landIncome' field.
   * @return The value of the 'landIncome' field.
   */
  public java.lang.CharSequence getLandIncome() {
    return landIncome;
  }

  /**
   * Sets the value of the 'landIncome' field.
   * @param value the value to set.
   */
  public void setLandIncome(java.lang.CharSequence value) {
    this.landIncome = value;
  }

  /**
   * Gets the value of the 'constructionYear' field.
   * @return The value of the 'constructionYear' field.
   */
  public java.lang.Long getConstructionYear() {
    return constructionYear;
  }

  /**
   * Sets the value of the 'constructionYear' field.
   * @param value the value to set.
   */
  public void setConstructionYear(java.lang.Long value) {
    this.constructionYear = value;
  }

  /**
   * Gets the value of the 'freeFrom' field.
   * @return The value of the 'freeFrom' field.
   */
  public java.lang.CharSequence getFreeFrom() {
    return freeFrom;
  }

  /**
   * Sets the value of the 'freeFrom' field.
   * @param value the value to set.
   */
  public void setFreeFrom(java.lang.CharSequence value) {
    this.freeFrom = value;
  }

  /**
   * Gets the value of the 'isLandIncomeToBeDefined' field.
   * @return The value of the 'isLandIncomeToBeDefined' field.
   */
  public java.lang.Boolean getIsLandIncomeToBeDefined() {
    return isLandIncomeToBeDefined;
  }

  /**
   * Sets the value of the 'isLandIncomeToBeDefined' field.
   * @param value the value to set.
   */
  public void setIsLandIncomeToBeDefined(java.lang.Boolean value) {
    this.isLandIncomeToBeDefined = value;
  }

  /**
   * Gets the value of the 'estimatedPrice' field.
   * @return The value of the 'estimatedPrice' field.
   */
  public java.lang.CharSequence getEstimatedPrice() {
    return estimatedPrice;
  }

  /**
   * Sets the value of the 'estimatedPrice' field.
   * @param value the value to set.
   */
  public void setEstimatedPrice(java.lang.CharSequence value) {
    this.estimatedPrice = value;
  }

  /**
   * Gets the value of the 'isInvestmentProperty' field.
   * @return The value of the 'isInvestmentProperty' field.
   */
  public java.lang.Boolean getIsInvestmentProperty() {
    return isInvestmentProperty;
  }

  /**
   * Sets the value of the 'isInvestmentProperty' field.
   * @param value the value to set.
   */
  public void setIsInvestmentProperty(java.lang.Boolean value) {
    this.isInvestmentProperty = value;
  }

  /**
   * Gets the value of the 'monthlyExpenses' field.
   * @return The value of the 'monthlyExpenses' field.
   */
  public java.lang.CharSequence getMonthlyExpenses() {
    return monthlyExpenses;
  }

  /**
   * Sets the value of the 'monthlyExpenses' field.
   * @param value the value to set.
   */
  public void setMonthlyExpenses(java.lang.CharSequence value) {
    this.monthlyExpenses = value;
  }

  /**
   * Gets the value of the 'sellingPrice' field.
   * @return The value of the 'sellingPrice' field.
   */
  public java.lang.CharSequence getSellingPrice() {
    return sellingPrice;
  }

  /**
   * Sets the value of the 'sellingPrice' field.
   * @param value the value to set.
   */
  public void setSellingPrice(java.lang.CharSequence value) {
    this.sellingPrice = value;
  }

  /**
   * Gets the value of the 'sellingPriceLabel' field.
   * @return The value of the 'sellingPriceLabel' field.
   */
  public java.lang.CharSequence getSellingPriceLabel() {
    return sellingPriceLabel;
  }

  /**
   * Sets the value of the 'sellingPriceLabel' field.
   * @param value the value to set.
   */
  public void setSellingPriceLabel(java.lang.CharSequence value) {
    this.sellingPriceLabel = value;
  }

  /**
   * Gets the value of the 'pricePerSquareMeter' field.
   * @return The value of the 'pricePerSquareMeter' field.
   */
  public java.lang.CharSequence getPricePerSquareMeter() {
    return pricePerSquareMeter;
  }

  /**
   * Sets the value of the 'pricePerSquareMeter' field.
   * @param value the value to set.
   */
  public void setPricePerSquareMeter(java.lang.CharSequence value) {
    this.pricePerSquareMeter = value;
  }

  /**
   * Gets the value of the 'isNewConstruction' field.
   * @return The value of the 'isNewConstruction' field.
   */
  public java.lang.Boolean getIsNewConstruction() {
    return isNewConstruction;
  }

  /**
   * Sets the value of the 'isNewConstruction' field.
   * @param value the value to set.
   */
  public void setIsNewConstruction(java.lang.Boolean value) {
    this.isNewConstruction = value;
  }

  /**
   * Gets the value of the 'newConstructionType' field.
   * @return The value of the 'newConstructionType' field.
   */
  public java.lang.CharSequence getNewConstructionType() {
    return newConstructionType;
  }

  /**
   * Sets the value of the 'newConstructionType' field.
   * @param value the value to set.
   */
  public void setNewConstructionType(java.lang.CharSequence value) {
    this.newConstructionType = value;
  }

  /**
   * Gets the value of the 'monthlyRent' field.
   * @return The value of the 'monthlyRent' field.
   */
  public java.lang.CharSequence getMonthlyRent() {
    return monthlyRent;
  }

  /**
   * Sets the value of the 'monthlyRent' field.
   * @param value the value to set.
   */
  public void setMonthlyRent(java.lang.CharSequence value) {
    this.monthlyRent = value;
  }

  /**
   * Gets the value of the 'annualRent' field.
   * @return The value of the 'annualRent' field.
   */
  public java.lang.CharSequence getAnnualRent() {
    return annualRent;
  }

  /**
   * Sets the value of the 'annualRent' field.
   * @param value the value to set.
   */
  public void setAnnualRent(java.lang.CharSequence value) {
    this.annualRent = value;
  }

  /**
   * Gets the value of the 'amountBouquet' field.
   * @return The value of the 'amountBouquet' field.
   */
  public java.lang.CharSequence getAmountBouquet() {
    return amountBouquet;
  }

  /**
   * Sets the value of the 'amountBouquet' field.
   * @param value the value to set.
   */
  public void setAmountBouquet(java.lang.CharSequence value) {
    this.amountBouquet = value;
  }

  /**
   * Gets the value of the 'isAnnuityAmount' field.
   * @return The value of the 'isAnnuityAmount' field.
   */
  public java.lang.Boolean getIsAnnuityAmount() {
    return isAnnuityAmount;
  }

  /**
   * Sets the value of the 'isAnnuityAmount' field.
   * @param value the value to set.
   */
  public void setIsAnnuityAmount(java.lang.Boolean value) {
    this.isAnnuityAmount = value;
  }

  /**
   * Gets the value of the 'annuityAmount' field.
   * @return The value of the 'annuityAmount' field.
   */
  public java.lang.CharSequence getAnnuityAmount() {
    return annuityAmount;
  }

  /**
   * Sets the value of the 'annuityAmount' field.
   * @param value the value to set.
   */
  public void setAnnuityAmount(java.lang.CharSequence value) {
    this.annuityAmount = value;
  }

  /**
   * Gets the value of the 'isAnnuityAvailable' field.
   * @return The value of the 'isAnnuityAvailable' field.
   */
  public java.lang.Boolean getIsAnnuityAvailable() {
    return isAnnuityAvailable;
  }

  /**
   * Sets the value of the 'isAnnuityAvailable' field.
   * @param value the value to set.
   */
  public void setIsAnnuityAvailable(java.lang.Boolean value) {
    this.isAnnuityAvailable = value;
  }

  /**
   * Gets the value of the 'availableDate' field.
   * @return The value of the 'availableDate' field.
   */
  public java.lang.Long getAvailableDate() {
    return availableDate;
  }

  /**
   * Sets the value of the 'availableDate' field.
   * @param value the value to set.
   */
  public void setAvailableDate(java.lang.Long value) {
    this.availableDate = value;
  }

  /**
   * Gets the value of the 'isAnnuityIndexed' field.
   * @return The value of the 'isAnnuityIndexed' field.
   */
  public java.lang.Boolean getIsAnnuityIndexed() {
    return isAnnuityIndexed;
  }

  /**
   * Sets the value of the 'isAnnuityIndexed' field.
   * @param value the value to set.
   */
  public void setIsAnnuityIndexed(java.lang.Boolean value) {
    this.isAnnuityIndexed = value;
  }

  /**
   * Gets the value of the 'annuityYearLimitation' field.
   * @return The value of the 'annuityYearLimitation' field.
   */
  public java.lang.Long getAnnuityYearLimitation() {
    return annuityYearLimitation;
  }

  /**
   * Sets the value of the 'annuityYearLimitation' field.
   * @param value the value to set.
   */
  public void setAnnuityYearLimitation(java.lang.Long value) {
    this.annuityYearLimitation = value;
  }

  /**
   * Gets the value of the 'annuityAgeOfPerson1' field.
   * @return The value of the 'annuityAgeOfPerson1' field.
   */
  public java.lang.Long getAnnuityAgeOfPerson1() {
    return annuityAgeOfPerson1;
  }

  /**
   * Sets the value of the 'annuityAgeOfPerson1' field.
   * @param value the value to set.
   */
  public void setAnnuityAgeOfPerson1(java.lang.Long value) {
    this.annuityAgeOfPerson1 = value;
  }

  /**
   * Gets the value of the 'annuityAgeOfPerson2' field.
   * @return The value of the 'annuityAgeOfPerson2' field.
   */
  public java.lang.Long getAnnuityAgeOfPerson2() {
    return annuityAgeOfPerson2;
  }

  /**
   * Sets the value of the 'annuityAgeOfPerson2' field.
   * @param value the value to set.
   */
  public void setAnnuityAgeOfPerson2(java.lang.Long value) {
    this.annuityAgeOfPerson2 = value;
  }

  /**
   * Gets the value of the 'percentageCurrentRent' field.
   * @return The value of the 'percentageCurrentRent' field.
   */
  public java.lang.Long getPercentageCurrentRent() {
    return percentageCurrentRent;
  }

  /**
   * Sets the value of the 'percentageCurrentRent' field.
   * @param value the value to set.
   */
  public void setPercentageCurrentRent(java.lang.Long value) {
    this.percentageCurrentRent = value;
  }

  /**
   * Gets the value of the 'stockInTradePrice' field.
   * @return The value of the 'stockInTradePrice' field.
   */
  public java.lang.CharSequence getStockInTradePrice() {
    return stockInTradePrice;
  }

  /**
   * Sets the value of the 'stockInTradePrice' field.
   * @param value the value to set.
   */
  public void setStockInTradePrice(java.lang.CharSequence value) {
    this.stockInTradePrice = value;
  }

  /**
   * Creates a new Financial RecordBuilder.
   * @return A new Financial RecordBuilder
   */
  public static avro_generated_types.root_view_entity.property.Financial.Builder newBuilder() {
    return new avro_generated_types.root_view_entity.property.Financial.Builder();
  }

  /**
   * Creates a new Financial RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Financial RecordBuilder
   */
  public static avro_generated_types.root_view_entity.property.Financial.Builder newBuilder(avro_generated_types.root_view_entity.property.Financial.Builder other) {
    return new avro_generated_types.root_view_entity.property.Financial.Builder(other);
  }

  /**
   * Creates a new Financial RecordBuilder by copying an existing Financial instance.
   * @param other The existing instance to copy.
   * @return A new Financial RecordBuilder
   */
  public static avro_generated_types.root_view_entity.property.Financial.Builder newBuilder(avro_generated_types.root_view_entity.property.Financial other) {
    return new avro_generated_types.root_view_entity.property.Financial.Builder(other);
  }

  /**
   * RecordBuilder for Financial instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Financial>
    implements org.apache.avro.data.RecordBuilder<Financial> {

    private java.lang.CharSequence landIncome;
    private java.lang.Long constructionYear;
    private java.lang.CharSequence freeFrom;
    private java.lang.Boolean isLandIncomeToBeDefined;
    private java.lang.CharSequence estimatedPrice;
    private java.lang.Boolean isInvestmentProperty;
    private java.lang.CharSequence monthlyExpenses;
    private java.lang.CharSequence sellingPrice;
    private java.lang.CharSequence sellingPriceLabel;
    private java.lang.CharSequence pricePerSquareMeter;
    private java.lang.Boolean isNewConstruction;
    private java.lang.CharSequence newConstructionType;
    private java.lang.CharSequence monthlyRent;
    private java.lang.CharSequence annualRent;
    private java.lang.CharSequence amountBouquet;
    private java.lang.Boolean isAnnuityAmount;
    private java.lang.CharSequence annuityAmount;
    private java.lang.Boolean isAnnuityAvailable;
    private java.lang.Long availableDate;
    private java.lang.Boolean isAnnuityIndexed;
    private java.lang.Long annuityYearLimitation;
    private java.lang.Long annuityAgeOfPerson1;
    private java.lang.Long annuityAgeOfPerson2;
    private java.lang.Long percentageCurrentRent;
    private java.lang.CharSequence stockInTradePrice;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(avro_generated_types.root_view_entity.property.Financial.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.landIncome)) {
        this.landIncome = data().deepCopy(fields()[0].schema(), other.landIncome);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.constructionYear)) {
        this.constructionYear = data().deepCopy(fields()[1].schema(), other.constructionYear);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.freeFrom)) {
        this.freeFrom = data().deepCopy(fields()[2].schema(), other.freeFrom);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isLandIncomeToBeDefined)) {
        this.isLandIncomeToBeDefined = data().deepCopy(fields()[3].schema(), other.isLandIncomeToBeDefined);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.estimatedPrice)) {
        this.estimatedPrice = data().deepCopy(fields()[4].schema(), other.estimatedPrice);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.isInvestmentProperty)) {
        this.isInvestmentProperty = data().deepCopy(fields()[5].schema(), other.isInvestmentProperty);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.monthlyExpenses)) {
        this.monthlyExpenses = data().deepCopy(fields()[6].schema(), other.monthlyExpenses);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sellingPrice)) {
        this.sellingPrice = data().deepCopy(fields()[7].schema(), other.sellingPrice);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sellingPriceLabel)) {
        this.sellingPriceLabel = data().deepCopy(fields()[8].schema(), other.sellingPriceLabel);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pricePerSquareMeter)) {
        this.pricePerSquareMeter = data().deepCopy(fields()[9].schema(), other.pricePerSquareMeter);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.isNewConstruction)) {
        this.isNewConstruction = data().deepCopy(fields()[10].schema(), other.isNewConstruction);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.newConstructionType)) {
        this.newConstructionType = data().deepCopy(fields()[11].schema(), other.newConstructionType);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.monthlyRent)) {
        this.monthlyRent = data().deepCopy(fields()[12].schema(), other.monthlyRent);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.annualRent)) {
        this.annualRent = data().deepCopy(fields()[13].schema(), other.annualRent);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.amountBouquet)) {
        this.amountBouquet = data().deepCopy(fields()[14].schema(), other.amountBouquet);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.isAnnuityAmount)) {
        this.isAnnuityAmount = data().deepCopy(fields()[15].schema(), other.isAnnuityAmount);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.annuityAmount)) {
        this.annuityAmount = data().deepCopy(fields()[16].schema(), other.annuityAmount);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.isAnnuityAvailable)) {
        this.isAnnuityAvailable = data().deepCopy(fields()[17].schema(), other.isAnnuityAvailable);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.availableDate)) {
        this.availableDate = data().deepCopy(fields()[18].schema(), other.availableDate);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.isAnnuityIndexed)) {
        this.isAnnuityIndexed = data().deepCopy(fields()[19].schema(), other.isAnnuityIndexed);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.annuityYearLimitation)) {
        this.annuityYearLimitation = data().deepCopy(fields()[20].schema(), other.annuityYearLimitation);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.annuityAgeOfPerson1)) {
        this.annuityAgeOfPerson1 = data().deepCopy(fields()[21].schema(), other.annuityAgeOfPerson1);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.annuityAgeOfPerson2)) {
        this.annuityAgeOfPerson2 = data().deepCopy(fields()[22].schema(), other.annuityAgeOfPerson2);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.percentageCurrentRent)) {
        this.percentageCurrentRent = data().deepCopy(fields()[23].schema(), other.percentageCurrentRent);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.stockInTradePrice)) {
        this.stockInTradePrice = data().deepCopy(fields()[24].schema(), other.stockInTradePrice);
        fieldSetFlags()[24] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Financial instance
     * @param other The existing instance to copy.
     */
    private Builder(avro_generated_types.root_view_entity.property.Financial other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.landIncome)) {
        this.landIncome = data().deepCopy(fields()[0].schema(), other.landIncome);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.constructionYear)) {
        this.constructionYear = data().deepCopy(fields()[1].schema(), other.constructionYear);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.freeFrom)) {
        this.freeFrom = data().deepCopy(fields()[2].schema(), other.freeFrom);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isLandIncomeToBeDefined)) {
        this.isLandIncomeToBeDefined = data().deepCopy(fields()[3].schema(), other.isLandIncomeToBeDefined);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.estimatedPrice)) {
        this.estimatedPrice = data().deepCopy(fields()[4].schema(), other.estimatedPrice);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.isInvestmentProperty)) {
        this.isInvestmentProperty = data().deepCopy(fields()[5].schema(), other.isInvestmentProperty);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.monthlyExpenses)) {
        this.monthlyExpenses = data().deepCopy(fields()[6].schema(), other.monthlyExpenses);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sellingPrice)) {
        this.sellingPrice = data().deepCopy(fields()[7].schema(), other.sellingPrice);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sellingPriceLabel)) {
        this.sellingPriceLabel = data().deepCopy(fields()[8].schema(), other.sellingPriceLabel);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pricePerSquareMeter)) {
        this.pricePerSquareMeter = data().deepCopy(fields()[9].schema(), other.pricePerSquareMeter);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.isNewConstruction)) {
        this.isNewConstruction = data().deepCopy(fields()[10].schema(), other.isNewConstruction);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.newConstructionType)) {
        this.newConstructionType = data().deepCopy(fields()[11].schema(), other.newConstructionType);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.monthlyRent)) {
        this.monthlyRent = data().deepCopy(fields()[12].schema(), other.monthlyRent);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.annualRent)) {
        this.annualRent = data().deepCopy(fields()[13].schema(), other.annualRent);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.amountBouquet)) {
        this.amountBouquet = data().deepCopy(fields()[14].schema(), other.amountBouquet);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.isAnnuityAmount)) {
        this.isAnnuityAmount = data().deepCopy(fields()[15].schema(), other.isAnnuityAmount);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.annuityAmount)) {
        this.annuityAmount = data().deepCopy(fields()[16].schema(), other.annuityAmount);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.isAnnuityAvailable)) {
        this.isAnnuityAvailable = data().deepCopy(fields()[17].schema(), other.isAnnuityAvailable);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.availableDate)) {
        this.availableDate = data().deepCopy(fields()[18].schema(), other.availableDate);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.isAnnuityIndexed)) {
        this.isAnnuityIndexed = data().deepCopy(fields()[19].schema(), other.isAnnuityIndexed);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.annuityYearLimitation)) {
        this.annuityYearLimitation = data().deepCopy(fields()[20].schema(), other.annuityYearLimitation);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.annuityAgeOfPerson1)) {
        this.annuityAgeOfPerson1 = data().deepCopy(fields()[21].schema(), other.annuityAgeOfPerson1);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.annuityAgeOfPerson2)) {
        this.annuityAgeOfPerson2 = data().deepCopy(fields()[22].schema(), other.annuityAgeOfPerson2);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.percentageCurrentRent)) {
        this.percentageCurrentRent = data().deepCopy(fields()[23].schema(), other.percentageCurrentRent);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.stockInTradePrice)) {
        this.stockInTradePrice = data().deepCopy(fields()[24].schema(), other.stockInTradePrice);
        fieldSetFlags()[24] = true;
      }
    }

    /**
      * Gets the value of the 'landIncome' field.
      * @return The value.
      */
    public java.lang.CharSequence getLandIncome() {
      return landIncome;
    }

    /**
      * Sets the value of the 'landIncome' field.
      * @param value The value of 'landIncome'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setLandIncome(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.landIncome = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'landIncome' field has been set.
      * @return True if the 'landIncome' field has been set, false otherwise.
      */
    public boolean hasLandIncome() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'landIncome' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearLandIncome() {
      landIncome = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'constructionYear' field.
      * @return The value.
      */
    public java.lang.Long getConstructionYear() {
      return constructionYear;
    }

    /**
      * Sets the value of the 'constructionYear' field.
      * @param value The value of 'constructionYear'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setConstructionYear(java.lang.Long value) {
      validate(fields()[1], value);
      this.constructionYear = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'constructionYear' field has been set.
      * @return True if the 'constructionYear' field has been set, false otherwise.
      */
    public boolean hasConstructionYear() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'constructionYear' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearConstructionYear() {
      constructionYear = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'freeFrom' field.
      * @return The value.
      */
    public java.lang.CharSequence getFreeFrom() {
      return freeFrom;
    }

    /**
      * Sets the value of the 'freeFrom' field.
      * @param value The value of 'freeFrom'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setFreeFrom(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.freeFrom = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'freeFrom' field has been set.
      * @return True if the 'freeFrom' field has been set, false otherwise.
      */
    public boolean hasFreeFrom() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'freeFrom' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearFreeFrom() {
      freeFrom = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'isLandIncomeToBeDefined' field.
      * @return The value.
      */
    public java.lang.Boolean getIsLandIncomeToBeDefined() {
      return isLandIncomeToBeDefined;
    }

    /**
      * Sets the value of the 'isLandIncomeToBeDefined' field.
      * @param value The value of 'isLandIncomeToBeDefined'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setIsLandIncomeToBeDefined(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.isLandIncomeToBeDefined = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'isLandIncomeToBeDefined' field has been set.
      * @return True if the 'isLandIncomeToBeDefined' field has been set, false otherwise.
      */
    public boolean hasIsLandIncomeToBeDefined() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'isLandIncomeToBeDefined' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearIsLandIncomeToBeDefined() {
      isLandIncomeToBeDefined = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'estimatedPrice' field.
      * @return The value.
      */
    public java.lang.CharSequence getEstimatedPrice() {
      return estimatedPrice;
    }

    /**
      * Sets the value of the 'estimatedPrice' field.
      * @param value The value of 'estimatedPrice'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setEstimatedPrice(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.estimatedPrice = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'estimatedPrice' field has been set.
      * @return True if the 'estimatedPrice' field has been set, false otherwise.
      */
    public boolean hasEstimatedPrice() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'estimatedPrice' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearEstimatedPrice() {
      estimatedPrice = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'isInvestmentProperty' field.
      * @return The value.
      */
    public java.lang.Boolean getIsInvestmentProperty() {
      return isInvestmentProperty;
    }

    /**
      * Sets the value of the 'isInvestmentProperty' field.
      * @param value The value of 'isInvestmentProperty'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setIsInvestmentProperty(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.isInvestmentProperty = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'isInvestmentProperty' field has been set.
      * @return True if the 'isInvestmentProperty' field has been set, false otherwise.
      */
    public boolean hasIsInvestmentProperty() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'isInvestmentProperty' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearIsInvestmentProperty() {
      isInvestmentProperty = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'monthlyExpenses' field.
      * @return The value.
      */
    public java.lang.CharSequence getMonthlyExpenses() {
      return monthlyExpenses;
    }

    /**
      * Sets the value of the 'monthlyExpenses' field.
      * @param value The value of 'monthlyExpenses'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setMonthlyExpenses(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.monthlyExpenses = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'monthlyExpenses' field has been set.
      * @return True if the 'monthlyExpenses' field has been set, false otherwise.
      */
    public boolean hasMonthlyExpenses() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'monthlyExpenses' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearMonthlyExpenses() {
      monthlyExpenses = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'sellingPrice' field.
      * @return The value.
      */
    public java.lang.CharSequence getSellingPrice() {
      return sellingPrice;
    }

    /**
      * Sets the value of the 'sellingPrice' field.
      * @param value The value of 'sellingPrice'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setSellingPrice(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.sellingPrice = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'sellingPrice' field has been set.
      * @return True if the 'sellingPrice' field has been set, false otherwise.
      */
    public boolean hasSellingPrice() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'sellingPrice' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearSellingPrice() {
      sellingPrice = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'sellingPriceLabel' field.
      * @return The value.
      */
    public java.lang.CharSequence getSellingPriceLabel() {
      return sellingPriceLabel;
    }

    /**
      * Sets the value of the 'sellingPriceLabel' field.
      * @param value The value of 'sellingPriceLabel'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setSellingPriceLabel(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.sellingPriceLabel = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'sellingPriceLabel' field has been set.
      * @return True if the 'sellingPriceLabel' field has been set, false otherwise.
      */
    public boolean hasSellingPriceLabel() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'sellingPriceLabel' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearSellingPriceLabel() {
      sellingPriceLabel = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'pricePerSquareMeter' field.
      * @return The value.
      */
    public java.lang.CharSequence getPricePerSquareMeter() {
      return pricePerSquareMeter;
    }

    /**
      * Sets the value of the 'pricePerSquareMeter' field.
      * @param value The value of 'pricePerSquareMeter'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setPricePerSquareMeter(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.pricePerSquareMeter = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'pricePerSquareMeter' field has been set.
      * @return True if the 'pricePerSquareMeter' field has been set, false otherwise.
      */
    public boolean hasPricePerSquareMeter() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'pricePerSquareMeter' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearPricePerSquareMeter() {
      pricePerSquareMeter = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'isNewConstruction' field.
      * @return The value.
      */
    public java.lang.Boolean getIsNewConstruction() {
      return isNewConstruction;
    }

    /**
      * Sets the value of the 'isNewConstruction' field.
      * @param value The value of 'isNewConstruction'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setIsNewConstruction(java.lang.Boolean value) {
      validate(fields()[10], value);
      this.isNewConstruction = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'isNewConstruction' field has been set.
      * @return True if the 'isNewConstruction' field has been set, false otherwise.
      */
    public boolean hasIsNewConstruction() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'isNewConstruction' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearIsNewConstruction() {
      isNewConstruction = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'newConstructionType' field.
      * @return The value.
      */
    public java.lang.CharSequence getNewConstructionType() {
      return newConstructionType;
    }

    /**
      * Sets the value of the 'newConstructionType' field.
      * @param value The value of 'newConstructionType'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setNewConstructionType(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.newConstructionType = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'newConstructionType' field has been set.
      * @return True if the 'newConstructionType' field has been set, false otherwise.
      */
    public boolean hasNewConstructionType() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'newConstructionType' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearNewConstructionType() {
      newConstructionType = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'monthlyRent' field.
      * @return The value.
      */
    public java.lang.CharSequence getMonthlyRent() {
      return monthlyRent;
    }

    /**
      * Sets the value of the 'monthlyRent' field.
      * @param value The value of 'monthlyRent'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setMonthlyRent(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.monthlyRent = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'monthlyRent' field has been set.
      * @return True if the 'monthlyRent' field has been set, false otherwise.
      */
    public boolean hasMonthlyRent() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'monthlyRent' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearMonthlyRent() {
      monthlyRent = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'annualRent' field.
      * @return The value.
      */
    public java.lang.CharSequence getAnnualRent() {
      return annualRent;
    }

    /**
      * Sets the value of the 'annualRent' field.
      * @param value The value of 'annualRent'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setAnnualRent(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.annualRent = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'annualRent' field has been set.
      * @return True if the 'annualRent' field has been set, false otherwise.
      */
    public boolean hasAnnualRent() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'annualRent' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearAnnualRent() {
      annualRent = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountBouquet' field.
      * @return The value.
      */
    public java.lang.CharSequence getAmountBouquet() {
      return amountBouquet;
    }

    /**
      * Sets the value of the 'amountBouquet' field.
      * @param value The value of 'amountBouquet'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setAmountBouquet(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.amountBouquet = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'amountBouquet' field has been set.
      * @return True if the 'amountBouquet' field has been set, false otherwise.
      */
    public boolean hasAmountBouquet() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'amountBouquet' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearAmountBouquet() {
      amountBouquet = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'isAnnuityAmount' field.
      * @return The value.
      */
    public java.lang.Boolean getIsAnnuityAmount() {
      return isAnnuityAmount;
    }

    /**
      * Sets the value of the 'isAnnuityAmount' field.
      * @param value The value of 'isAnnuityAmount'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setIsAnnuityAmount(java.lang.Boolean value) {
      validate(fields()[15], value);
      this.isAnnuityAmount = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'isAnnuityAmount' field has been set.
      * @return True if the 'isAnnuityAmount' field has been set, false otherwise.
      */
    public boolean hasIsAnnuityAmount() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'isAnnuityAmount' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearIsAnnuityAmount() {
      isAnnuityAmount = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'annuityAmount' field.
      * @return The value.
      */
    public java.lang.CharSequence getAnnuityAmount() {
      return annuityAmount;
    }

    /**
      * Sets the value of the 'annuityAmount' field.
      * @param value The value of 'annuityAmount'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setAnnuityAmount(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.annuityAmount = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'annuityAmount' field has been set.
      * @return True if the 'annuityAmount' field has been set, false otherwise.
      */
    public boolean hasAnnuityAmount() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'annuityAmount' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearAnnuityAmount() {
      annuityAmount = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'isAnnuityAvailable' field.
      * @return The value.
      */
    public java.lang.Boolean getIsAnnuityAvailable() {
      return isAnnuityAvailable;
    }

    /**
      * Sets the value of the 'isAnnuityAvailable' field.
      * @param value The value of 'isAnnuityAvailable'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setIsAnnuityAvailable(java.lang.Boolean value) {
      validate(fields()[17], value);
      this.isAnnuityAvailable = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'isAnnuityAvailable' field has been set.
      * @return True if the 'isAnnuityAvailable' field has been set, false otherwise.
      */
    public boolean hasIsAnnuityAvailable() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'isAnnuityAvailable' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearIsAnnuityAvailable() {
      isAnnuityAvailable = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'availableDate' field.
      * @return The value.
      */
    public java.lang.Long getAvailableDate() {
      return availableDate;
    }

    /**
      * Sets the value of the 'availableDate' field.
      * @param value The value of 'availableDate'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setAvailableDate(java.lang.Long value) {
      validate(fields()[18], value);
      this.availableDate = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'availableDate' field has been set.
      * @return True if the 'availableDate' field has been set, false otherwise.
      */
    public boolean hasAvailableDate() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'availableDate' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearAvailableDate() {
      availableDate = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'isAnnuityIndexed' field.
      * @return The value.
      */
    public java.lang.Boolean getIsAnnuityIndexed() {
      return isAnnuityIndexed;
    }

    /**
      * Sets the value of the 'isAnnuityIndexed' field.
      * @param value The value of 'isAnnuityIndexed'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setIsAnnuityIndexed(java.lang.Boolean value) {
      validate(fields()[19], value);
      this.isAnnuityIndexed = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'isAnnuityIndexed' field has been set.
      * @return True if the 'isAnnuityIndexed' field has been set, false otherwise.
      */
    public boolean hasIsAnnuityIndexed() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'isAnnuityIndexed' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearIsAnnuityIndexed() {
      isAnnuityIndexed = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'annuityYearLimitation' field.
      * @return The value.
      */
    public java.lang.Long getAnnuityYearLimitation() {
      return annuityYearLimitation;
    }

    /**
      * Sets the value of the 'annuityYearLimitation' field.
      * @param value The value of 'annuityYearLimitation'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setAnnuityYearLimitation(java.lang.Long value) {
      validate(fields()[20], value);
      this.annuityYearLimitation = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'annuityYearLimitation' field has been set.
      * @return True if the 'annuityYearLimitation' field has been set, false otherwise.
      */
    public boolean hasAnnuityYearLimitation() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'annuityYearLimitation' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearAnnuityYearLimitation() {
      annuityYearLimitation = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'annuityAgeOfPerson1' field.
      * @return The value.
      */
    public java.lang.Long getAnnuityAgeOfPerson1() {
      return annuityAgeOfPerson1;
    }

    /**
      * Sets the value of the 'annuityAgeOfPerson1' field.
      * @param value The value of 'annuityAgeOfPerson1'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setAnnuityAgeOfPerson1(java.lang.Long value) {
      validate(fields()[21], value);
      this.annuityAgeOfPerson1 = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'annuityAgeOfPerson1' field has been set.
      * @return True if the 'annuityAgeOfPerson1' field has been set, false otherwise.
      */
    public boolean hasAnnuityAgeOfPerson1() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'annuityAgeOfPerson1' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearAnnuityAgeOfPerson1() {
      annuityAgeOfPerson1 = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'annuityAgeOfPerson2' field.
      * @return The value.
      */
    public java.lang.Long getAnnuityAgeOfPerson2() {
      return annuityAgeOfPerson2;
    }

    /**
      * Sets the value of the 'annuityAgeOfPerson2' field.
      * @param value The value of 'annuityAgeOfPerson2'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setAnnuityAgeOfPerson2(java.lang.Long value) {
      validate(fields()[22], value);
      this.annuityAgeOfPerson2 = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'annuityAgeOfPerson2' field has been set.
      * @return True if the 'annuityAgeOfPerson2' field has been set, false otherwise.
      */
    public boolean hasAnnuityAgeOfPerson2() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'annuityAgeOfPerson2' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearAnnuityAgeOfPerson2() {
      annuityAgeOfPerson2 = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'percentageCurrentRent' field.
      * @return The value.
      */
    public java.lang.Long getPercentageCurrentRent() {
      return percentageCurrentRent;
    }

    /**
      * Sets the value of the 'percentageCurrentRent' field.
      * @param value The value of 'percentageCurrentRent'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setPercentageCurrentRent(java.lang.Long value) {
      validate(fields()[23], value);
      this.percentageCurrentRent = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'percentageCurrentRent' field has been set.
      * @return True if the 'percentageCurrentRent' field has been set, false otherwise.
      */
    public boolean hasPercentageCurrentRent() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'percentageCurrentRent' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearPercentageCurrentRent() {
      percentageCurrentRent = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'stockInTradePrice' field.
      * @return The value.
      */
    public java.lang.CharSequence getStockInTradePrice() {
      return stockInTradePrice;
    }

    /**
      * Sets the value of the 'stockInTradePrice' field.
      * @param value The value of 'stockInTradePrice'.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder setStockInTradePrice(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.stockInTradePrice = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'stockInTradePrice' field has been set.
      * @return True if the 'stockInTradePrice' field has been set, false otherwise.
      */
    public boolean hasStockInTradePrice() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'stockInTradePrice' field.
      * @return This builder.
      */
    public avro_generated_types.root_view_entity.property.Financial.Builder clearStockInTradePrice() {
      stockInTradePrice = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    @Override
    public Financial build() {
      try {
        Financial record = new Financial();
        record.landIncome = fieldSetFlags()[0] ? this.landIncome : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.constructionYear = fieldSetFlags()[1] ? this.constructionYear : (java.lang.Long) defaultValue(fields()[1]);
        record.freeFrom = fieldSetFlags()[2] ? this.freeFrom : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.isLandIncomeToBeDefined = fieldSetFlags()[3] ? this.isLandIncomeToBeDefined : (java.lang.Boolean) defaultValue(fields()[3]);
        record.estimatedPrice = fieldSetFlags()[4] ? this.estimatedPrice : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.isInvestmentProperty = fieldSetFlags()[5] ? this.isInvestmentProperty : (java.lang.Boolean) defaultValue(fields()[5]);
        record.monthlyExpenses = fieldSetFlags()[6] ? this.monthlyExpenses : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.sellingPrice = fieldSetFlags()[7] ? this.sellingPrice : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.sellingPriceLabel = fieldSetFlags()[8] ? this.sellingPriceLabel : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.pricePerSquareMeter = fieldSetFlags()[9] ? this.pricePerSquareMeter : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.isNewConstruction = fieldSetFlags()[10] ? this.isNewConstruction : (java.lang.Boolean) defaultValue(fields()[10]);
        record.newConstructionType = fieldSetFlags()[11] ? this.newConstructionType : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.monthlyRent = fieldSetFlags()[12] ? this.monthlyRent : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.annualRent = fieldSetFlags()[13] ? this.annualRent : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.amountBouquet = fieldSetFlags()[14] ? this.amountBouquet : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.isAnnuityAmount = fieldSetFlags()[15] ? this.isAnnuityAmount : (java.lang.Boolean) defaultValue(fields()[15]);
        record.annuityAmount = fieldSetFlags()[16] ? this.annuityAmount : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.isAnnuityAvailable = fieldSetFlags()[17] ? this.isAnnuityAvailable : (java.lang.Boolean) defaultValue(fields()[17]);
        record.availableDate = fieldSetFlags()[18] ? this.availableDate : (java.lang.Long) defaultValue(fields()[18]);
        record.isAnnuityIndexed = fieldSetFlags()[19] ? this.isAnnuityIndexed : (java.lang.Boolean) defaultValue(fields()[19]);
        record.annuityYearLimitation = fieldSetFlags()[20] ? this.annuityYearLimitation : (java.lang.Long) defaultValue(fields()[20]);
        record.annuityAgeOfPerson1 = fieldSetFlags()[21] ? this.annuityAgeOfPerson1 : (java.lang.Long) defaultValue(fields()[21]);
        record.annuityAgeOfPerson2 = fieldSetFlags()[22] ? this.annuityAgeOfPerson2 : (java.lang.Long) defaultValue(fields()[22]);
        record.percentageCurrentRent = fieldSetFlags()[23] ? this.percentageCurrentRent : (java.lang.Long) defaultValue(fields()[23]);
        record.stockInTradePrice = fieldSetFlags()[24] ? this.stockInTradePrice : (java.lang.CharSequence) defaultValue(fields()[24]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
